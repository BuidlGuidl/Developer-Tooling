[
  {
    "name": "Viem: TypeScript Interface for Ethereum",
    "description": "Viem is the most used modern TypeScript Interface for Ethereum. Viem provides robust, performant, and type-safe modules to be the foundation for building Web Applications, TypeScript Libraries, Wallets, Backends, Indexers, Scripts, and more, on top of Ethereum (and the OP Stack). With over 3 million monthly downloads, Viem is used in production by most at-scale projects like Coinbase, Uniswap, Optimism, Polymarket, Zora, Opensea, WalletConnect, Farcaster, Rainbow, and so much more."
  },
  {
    "name": "OpenZeppelin Contracts",
    "description": "OpenZeppelin’s Contracts Library is at the core of our developer tooling, offering battle-tested modules for secure smart contract development. Building on this foundation, we introduced during 2024 and 2025 specialized repositories—Community Contracts for experimental features like ERC-7786 cross-chain messaging, Contracts Wizard for interactive contract creation, Contracts Upgradeable for evolving deployments, Upgrades and Upgrades plugins for streamlined proxy management, Merkle Tree for advanced proof generation, and Subgraphs for indexing on-chain activity. Each extension serves a distinct role while complementing the main library’s rigorous security standards, broadening developers’ capabilities across interoperable and upgradeable scenarios.\n\nBy integrating advanced features such as cross-chain asset transfers, modular accounts, and streamlined deployment flows, this suite aligns closely with Optimism’s 2025 intent to foster cross-chain interactions. In particular, ERC‑7786 aims to unify multi-chain messaging protocols, facilitating frictionless interoperability between networks. \n\nCombined with the shared focus on secure, upgradeable development and open collaboration, OpenZeppelin’s tooling empowers builders to innovate confidently on Optimism and beyond, driving the ecosystem toward broader Superchain adoption."
  },
  {
    "name": "Ethers.js",
    "description": "Ethers.js is a simple, compact and complete JavaScript (via TypeScript) library for interacting with Ethereum and related blockchains.\n\nIt is currently used in a very large number of Blockchain projects, including everything from block explorers to wallets (like MetaMask) and is downloaded over 7.1 million times per month (as of this writing). It is also one of the top 500 projects (by dependants) on NPM.\n\nIt was written and is maintained by me, RicMoo (Richard Moore), a random developer from Canada that is passionate about open-source and dedicates most his waking-time (and some sleeping-time) to it.\n\nHack the Planet! :)"
  },
  {
    "name": "Solidity",
    "description": "Solidity is an object-oriented, high-level language for implementing smart contracts."
  },
  {
    "name": "Hardhat",
    "description": "Hardhat is a development environment to build and deploy your Ethereum software"
  },
  {
    "name": "Wagmi: Reactive primitives for Ethereum apps ",
    "description": "Wagmi is the industry standard for building apps on Ethereum. Wagmi has deep integrations with modern web frameworks, like React.js and Vue.js, and makes it easy to connect wallets, sign messages, send transactions, and read/write on-chain data. With over 1.2M monthly downloads, Wagmi is used in production by most of the industry and is at the core of apps, like Uniswap, Optimism, Polymarket, Stripe, Zora, and Farcaster."
  },
  {
    "name": "solidity-coverage",
    "description": "solidity-coverage provides smart-contract code coverage for the Hardhat developer platform.  It's highly accurate, supports full viaIR solidity compilation and a large set of solidity-specific code branch patterns. It's installed on ~230k Github projects and is downloaded ~100k times a week from NPM."
  },
  {
    "name": "Ronan Sandford",
    "description": "I am a game dev that fell in the rabbit hole of crypto in 2016 when I discovered Ethereum and started to think about hte new game we could make with that. \n\nStarted to build one back in 2017 and released 3 more since then. I am fascinated by the possibility of worlds without owner: Autonomous World\n\nI setup a company of which I am the sole owner and member: Etherplay. And with it I set up to explore this exciting new domain. While this is currently only me, it will hopefully grow into something bigger as time goes by.\n\nThe games built are \n- https://ethernal.land\n- https://conquest.game\n- https://stratagems.world\n- https://catacombs.world\n\nAll these game are open-source.\n\nTo build these game I had to build tools to support them. This includes hardhat-deploy, FUZD, clones-with-immutables, ethereum-indexer, missiv and more"
  },
  {
    "name": "Solhint",
    "description": "SOLHINT is the most used Solidity linter in web3 space. A tool that helps solidity devs to write standardized smart contracts code, taking care of code quality, order, readability, style guides, preventing known bugs, and giving security alerts. It is an extremely popular open source tool within Ethereum community. Our grant application aims to fund a small dedicated team of technical and marketing professionals to increase community engagement into proposing new rules, report bugs, discuss possible updates, etc."
  },
  {
    "name": "DefiLlama",
    "description": "- Open and transparent DeFi analytics.\n- DEX meta-aggregator\n- LlamaZIp, a router optimized for optimistic rollups"
  },
  {
    "name": "Solady",
    "description": "Solady is an open-source repository containing highly-optimized Solidity snippets. It offers efficient implementations of commonly-used libraries, such as MerkleProofLib, alongside cutting-edge features like LibZip.\n\nBy thoughtfully encapsulating low-level inline assembly within flexible APIs, Solady simplifies the process of writing clean and efficient Solidity code. More than just a library, Solady also serves as a learning resource and experimental laboratory for pioneering gas-optimization techniques.\n\nSolady is used in the codebases of Optimism and Coinbase.\n\nWith respect to the OP stack, Solady contributes in the following ways:\n- Provides a Solidity and JavaScript implementation of FastLZ compression algorithm, which is used for more accurate gas estimations in the Fjord upgrade. The JavaScript code is very minimal, allowing for it's easy translation into Go.\n- Various other utilities such as bytecode proxies and string operations."
  },
  {
    "name": "ethereum-bloom-filters",
    "description": "A lightweight bloom filter client which allows you to test ethereum blooms for fast checks of set membership."
  },
  {
    "name": "web3.py",
    "description": "web3.py is the open source library that connects Python developers to Ethereum. The same team maintains more than a dozen additional building blocks including py-evm, eth-account, and eth-utils."
  },
  {
    "name": "IPFS",
    "description": "IPFS (InterPlanetary File System) is a peer-to-peer protocol designed to make the web faster, more open, and more resilient. By using content-addressed storage rather than location-based references, IPFS removes the need for centralized servers and allows files to be distributed and retrieved from multiple nodes around the world. This approach lowers hosting costs, improves data availability, and reduces censorship, laying the groundwork for a more secure and permanent global information network.\n\nIPFS is used in a variety of applications. While some users interact with IPFS via imported libraries in their projects, a large amount of usage comes via IPFS' HTTP Gateway API which allows users to self-host, use extensions like IPFS companion, or publicly run gateways (whether paid ones run by companies like Filebase, Pinata, etc. or the public goods services at ipfs.io and dweb.link).\n\nIPFS is a system for moving data across decentralized networks, with >11M weekly users and 250K public p2p nodes. Highlights:\n\n1. Off-chain storage. IPFS provides verifiable, off-chain storage, often used to reduce on-chain needs in Ethereum & Optimism. Examples: TrueBlocks (local IPFS-based index for EVM chains, built with grants from OP & EF), Snapshot (IPFS-based off-chain voting).\n\n2. Go-to distribution network for fully decentralized third-party app frontends (for gaming, DeFi, & more). We run gateway services that serve 900M requests/wk, and added native IPFS support to browsers like Chromium & Brave.\n\n3. NFT metadata gold standard. Over 115M NFTs are stored on IPFS, including leading platforms OpenSea (which supports Optimism NFTs), Rarible, and Zora."
  },
  {
    "name": "hardhat-gas-reporter",
    "description": "A hardhat plugin that provides gas usage analytics for smart contract test suites. It has dedicated support for OPStack chains, is a dependency in > 150k Github repos and is downloaded from NPM > 100k per week.  "
  },
  {
    "name": "noble cryptography",
    "description": "noble cryptography is a high-security, easily auditable set of contained cryptographic libraries with following features:\n\n- Zero or minimal dependencies\n- Highly readable TypeScript / JS code\n- PGP-signed releases and transparent NPM builds\n\nnoble cryptography is used in most modern JS wallets, including Metamask, Rabby, Rainbow, various SDKs, and others. Essentially it empowers a huge share of ecosystem."
  },
  {
    "name": "🏗️  Scaffold-ETH 2",
    "description": "Scaffold-ETH 2 is an open-source toolkit for building decentralized applications on any EVM chain. It's designed to make it easier for developers to create and deploy smart contracts and build user interfaces that interact with those contracts.\n\nIt's a new version of scaffold-eth with its core functionality.\n\n- ⚙️ Built using NextJS, RainbowKit, Hardhat, Foundry, Wagmi, Viem, and Typescript.\n- ✅ Contract Hot Reload: Your frontend auto-adapts to your smart contract as you edit it.\n- 🪝 Custom hooks: Collection of React hooks wrapper around wagmi to simplify interactions with smart contracts with typescript autocompletion.\n- 🧱 Components: Collection of common web3 components to quickly build your frontend.\n- 🔥 Burner Wallet & Local Faucet: Quickly test your application with a burner wallet and local faucet.\n- 🔐 Integration with Wallet Providers: Connect to different wallet providers and interact with the Ethereum network.\n- 🔌 Extensions: Modular add-ons that provide additional functionality or serve as starter-kits for specific features.\n  \n  \n*OP RetroFunding Rounds reported in the Funding Source section were for BuidlGuidl itself or other BuidlGuidl projects, not directly linked to Scaffold-ETH 2."
  },
  {
    "name": "Ponder",
    "description": "Ponder is an open-source indexing framework for crypto apps focused on performance, reliability and developer experience. Dozens of apps across the Superchain use Ponder to power their websites and mobile applications. Our goal is to enable world-class user experiences that don't compromise on censorship-resistance and decentralization."
  },
  {
    "name": "Foundry",
    "description": "Foundry is a blazing fast, portable and modular toolkit for Ethereum application development written in Rust.\n\nIt is a smart contract development toolchain that manages your dependencies, compiles your project, runs tests, deploys, and lets you interact with the chain from the command-line and via Solidity scripts."
  },
  {
    "name": "Synpress",
    "description": "Synpress is an end-to-end testing framework for web applications based on Cypress.io and Playwright, with support for MetaMask. It is a pioneering tool in web3 end-to-end testing with the potential to evolve into a decentralized network of test runners and continuous integration providers in the future. Synpress is easy to use, fully tested, and includes features such as MetaMask support, headless mode, integrated video recording, and many more. It is also blazingly-fast and extensible, with the ability to add custom commands and plugins. Synpress is already used by many open-source repositories."
  },
  {
    "name": "MerkleTreeJS",
    "description": "A JavaScript library to construct Merkle Trees and verify proofs."
  },
  {
    "name": "thirdweb",
    "description": "thirdweb is a full stack, open-source web3 development platform with frontend, backend, and onchain tools to build complete web3 apps — on every EVM chain."
  },
  {
    "name": "Revm",
    "description": "Revm is a critical component in the Ethereum ecosystem used by builders, toolings, clients and chains."
  },
  {
    "name": "Cannon",
    "description": "Cannon is a DevOps tool for protocols on Ethereum. It manages smart contract deployment and configuration for local development and live networks."
  },
  {
    "name": "Prettier Solidity",
    "description": "A Prettier plugin for automatically formatting your Solidity code."
  },
  {
    "name": "WhatsABI",
    "description": "Extract ABI (and more) from Ethereum contract bytecode, even without source code.\n\nWhatsABI is a public good for making EVM bytecode more useful and usable on all EVM-based chains, such as mainnet and OP Stack chains.\n\nThe guiding purpose for WhatsABI is to improve decentralization, transparency, and user safety by reducing our dependence on proprietary centralized frontends for EVM contracts. \n\nWhatsABI a permissively-licensed TypeScript library that is perfect for building better contract explorers, transaction builders, smarter wallets, and for doing security research. It is designed to be small, fast, and easily embedded in wallets or runnable locally with any provider. Some things WhatsABI can do: Return selectors from bytecode, look up function signatures from selectors, provide helpers for looking up ABI and signatures from public databases (like Sourcify, Etherscan, Blockscout, OpenChain, 4Byte), resolve onchain proxies (including inspecting available diamond facets!), loading contract metadata, and more.  \n\nWhatsABI is already powering many popular projects like: Otterscan, Sourcify, Rivet, Ondora, Thirdweb, and more coming soon as we collaborate on integrations upstream."
  },
  {
    "name": "ethereum-multicall",
    "description": "Ability to call many ethereum constant function calls in 1 JSONRPC request"
  },
  {
    "name": "js-libp2p",
    "description": "The canonical JavaScript implementation of libp2p. Js-libp2p is a collection of protocols that support a wide range of functionalities, such as; connection establishment, remote node protocol identification and negotiation (through its identify protocol), data encryption, content/peer discovery (through its Kademlia DHT component), and data transfer through its pub-sub protocol (Gossipsub).\n\nThe stakeholders of js-libp2p include the Interplanetary Shipyard team who maintain this implementation as well as projects that depend on js-libp2p like major on-chain builder apps like Farcaster. Farcaster contracts are deployed on Optimism and they rely directly on js-libp2p in Farcaster Hubs (transports and protocols like GossipSub).\n\nAdditionally, ChainSafe's Lodestar (Ethereum consensus client written in Typescript), Ocean Protocol (in their Ocean Nodes implementation), OrbitDB (a serverless, distributed, peer-to-peer database), Warden Protocol, and many more: https://github.com/libp2p/js-libp2p/tree/main#used-by and https://github.com/libp2p/js-libp2p/network/dependents."
  },
  {
    "name": "PRBMath",
    "description": "PRBMath is a smart contract library that adds support for fixed-point types and advanced math functions like logarithms and exponentials in Solidity. Operating with 18-decimal numbers, PRBMath is at the same time gas efficient and user-friendly."
  },
  {
    "name": "Solidity Bytes Arrays Utils Library",
    "description": "Bytes tightly packed arrays' utility library for ethereum contracts written in Solidity.\n\nThe library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n\n-----\n\nThe Solidity Bytes Arrays Utils library is a Solidity library I initially wrote 7+ years ago, when Solidity was in its initial days, to be able to handle dynamic bytes arrays through canonical functions like concatenation and slicing.\n\nI have maintained the functional part of its code single-handedly over the years with help around documentation and ideation from a few other contributors.\n\nThis library has been used extensively over the years by some of the biggest projects in the space. Names like Aragon, Maker, Uniswap, Nomad, LayerZero, and, probably more importantly, Optimism, in its initial version.\n\n(Not all projects forked the repo. You can find a big list of forks here: https://github.com/GNSPS/solidity-bytes-utils/forks, the rest can be found by either searching \"BytesLib.sol\" on Google or just searching for parts of the code itself on GitHub.)"
  },
  {
    "name": "LI.FI",
    "description": "One API to swap, bridge, and zap across all major blockchains and protocols. Enable trading across all DEX aggregators, bridges, and intent-systems and save hundreds of developer hours."
  },
  {
    "name": "Rust Libp2p",
    "description": "The rust implementation of libp2p. Libp2p is a modular framework for a variety of p2p protocols. These protocols are used widely by a variety of projects to establish p2p communications in a decentralized manner.\n\nThe rust implementation is used by a variety of projects in the space including, Magi (OP Stack rollup client), Lighthouse (Ethereum consensus client) and Forest (Filecoin client). \n\nThe rust implementation specifically, is used by a variety of projects in the "
  },
  {
    "name": "Vyper",
    "description": "Pythonic Smart Contract Language for the EVM"
  },
  {
    "name": "Slither",
    "description": "Slither is a Solidity and Vyper static analysis framework written in Python3. \n\nIt runs a suite of vulnerability detectors, prints visual information about contract details, and provides an API to easily write custom analyses. Slither enables developers to find vulnerabilities, enhance their code comprehension, and quickly prototype custom analyses.\n\nSlither has been used for many years by both security engineers and developers to secure their smart contracts. \n\nBy allowing developers to find the most common vulnerabilities on their smart contracts, Slither helps to improve the security of the Optimism ecosystem.\n\nSlither has 90+ detectors, and works on both Solidity and Vyper. In addition it provides printers, helping to review quickly features of contracts. It's python API can also be used to leverage its inbuilt analysis for custom needs.\n\nSlither can directly be run on a contract deployed on optimism, with `slither optim:0x..ADDRESS`"
  },
  {
    "name": "Ape Framework",
    "description": "Ape: The Smart Contract Development Tool for Pythonistas, Data Scientists, and Security Professionals\n\nApe is a powerful and extensible smart contract development framework designed for Python developers, data scientists, and security professionals. With a robust plugin ecosystem, including ape-optimism, Ape makes it easy to test and interact with superchain networks.\n\nThe ape-optimism plugin enables seamless development, testing, and deployment on Optimism and other superchain networks. Looking ahead, we plan to enhance its capabilities with:\n\n* L1 Confirmation Tracking – Monitor Layer 1 finality for cross-chain interactions.\n* Native Bridge Integrations – Streamline asset transfers between L1 and L2.\n* L2 → L1 Withdrawals Management – Improve handling of delayed exits.\n* OP Stack Pre-compile Support – Ensure full compatibility with Optimism’s built-in pre-compiles.\n\nWhether you're building, auditing, or analyzing smart contracts, Ape provides the tools you need to work efficiently across Ethereum and Layer 2 networks."
  },
  {
    "name": "go-libp2p",
    "description": "The canonical Golang implementation of libp2p. Go-libp2p is a collection of protocols that support a wide range of functionalities, such as; connection establishment, remote node protocol identification and negotiation (through its identify protocol), data encryption, content/peer discovery (through its Kademlia DHT component), and data transfer through its pub-sub protocol (Gossipsub).\n\nThe stakeholders of go-libp2p include the Interplanetary Shipyard team who maintain this implementation as well as projects that depend on go-libp2p like Optimism's op-node (the reference implementation of the rollup-node spec), the Ethereum Beacon Chain (via Prysm, the Go consensus client), Filecoin (Lotus and Venus), Celestia node, and many more: https://github.com/libp2p/go-libp2p?tab=readme-ov-file#notable-users."
  },
  {
    "name": "Titanoboa",
    "description": "Titanoboa is a Vyper interpreter and testing framework that provides a modern, integrated development experience for Vyper smart contracts. It enables developers to test and debug Vyper contracts directly within Python, offering features like pretty tracebacks, forking, debugging capabilities, pytest integration and out-of-the box fuzzing. Beyond its standalone capabilities, Titanoboa serves as the foundation for other popular testing frameworks like Ape and Moccasin, and is a core piece of infrastructure for the Vyper ecosystem."
  },
  {
    "name": "🐍 snekmate",
    "description": "State-of-the-art, highly opinionated, hyper-optimised, and secure 🐍Vyper smart contract building blocks."
  },
  {
    "name": "rotki",
    "description": "rotki is an opensource, local-first, and privacy-focused portfolio tracking tool that empowers users to manage their financial data without relying on centralized services. It supports multiple asset classes, including onchain and traditional investments, and offers robust management, analytics, and accounting features. Beyond its core functionality, rotki is modular, with components that have been used in other projects, making it a valuable tool for the broader Ethereum and Optimism superchain ecosystem."
  },
  {
    "name": "Ethereum Attestation Service (EAS)",
    "description": "EAS is an infrastructure public good for making attestations onchain or offchain about anything. Attestations are digital signatures on structured pieces of data used to build more trust online and onchain. Over 1M+ attestations have been made in the Superchain from over 14k+ unique attesters.\n\nEAS is natively integrated into OP Bedrock and linked by two predeploy addresses:\nhttps://github.com/ethereum-optimism/optimism/tree/3542398896d9faca6b379fe67e3985d722cf80b6/packages/contracts-bedrock/src/EAS"
  },
  {
    "name": "xdeployer",
    "description": "Hardhat plugin to deploy your smart contracts across multiple EVM chains with the same deterministic address. A total of 133 EVM chains are currently supported, including (almost) all OP-stack-powered chains."
  },
  {
    "name": "rindexer",
    "description": "rindexer is an opensource powerful, high-speed indexing toolset developed in Rust, designed for compatibility with any EVM chain. This tool allows you to index chain events using a simple YAML file, requiring no additional coding. For more advanced needs, the rindexer provides foundations and advanced capabilities to build whatever you want. It's highly extendable, enabling you to construct indexing pipelines with ease and focus exclusively on the logic. rindexer out the box also gives you a GraphQL API to query the data you have indexed instantly."
  },
  {
    "name": "keccak256js",
    "description": "A wrapper for the keccak library to compute 256 bit keccak hash in JavaScript."
  },
  {
    "name": "Snapshot",
    "description": "Snapshot started as a voting platform designed to allow onchain organizations to vote easily without gas fees. Its strength lies in its flexibility and high customization, catering to the diverse needs of its users. This includes options for calculating users' voting power, selecting different voting mechanisms, and managing proposal and vote validation rules.\n\nAs the gas cost dropped with the maturity of L2s and the need for more decentralized and trustless voting grew, we developed Snapshot X, an onchain voting protocol. Unlike the original Snapshot, Snapshot X operates fully onchain using a set of modular smart contracts. This shift makes Snapshot censorship resistant, with onchain and cross-chain voting power computation and trustless execution, while keeping gas costs to the minimal extent possible."
  },
  {
    "name": "Blockscout open-source block explorer",
    "description": "Blockscout block explorer is the #1 explorer used by Optimistic rollups and Superchain networks. Blockscout is highly customizable and available, providing advanced developer tooling for projects and blockchain transparency for users."
  },
  {
    "name": "eRPC",
    "description": "eRPC is a fault-tolerant EVM RPC proxy and permanent caching solution. It is built with read-heavy use-cases in mind such as data indexing and high-load frontend usage. It is designed to lower costs through local caching, enhance reliability during provider outages, and improve visibility into RPC usage across teams and third-party providers."
  },
  {
    "name": "CreateX",
    "description": "CreateX is a Trustless, Universal Contract Deployer that provides everyone with an easier and safer way to use the EVM opcodes `CREATE` and `CREATE2` as well as `CREATE3`-based (i.e. without an initcode factor) contract creations. CreateX is a preinstall on the OP Stack: https://specs.optimism.io/protocol/preinstalls.html#createx."
  },
  {
    "name": "ethers-multicall-provider",
    "description": "Querying an RPC endpoint can be very costly (100+ queries) when loading data from multiple smart contracts. With multicall, batch these queries into a single, on-chain query, without additional over-head!\n\n- Integrates both Multicall2 & Multicall3, enabling faster queries up to block #12_336_033 on mainnet\n- Natively supports 25+ EVM-compatible chains on which Multicall3 & Multicall2 are deployed\n- Enables 10x faster off-chain data queries, making UIs faster to render and reload\n- Built-in support for blockTag-specific contract calls, batching all calls made at the same block tag (if applicable)\n- Only fails specific failing smart contract calls when batching, which makes debugging as easy as with native ethers"
  },
  {
    "name": "Brownie",
    "description": "A Python-based development and testing framework for smart contracts targeting the Ethereum Virtual Machine. "
  },
  {
    "name": "alloy",
    "description": "Alloy is a set of libraries that provides types and RPC client implementations for ethereum and optimism."
  },
  {
    "name": "Solc-select",
    "description": "Solc-select is a command line utility for quickly installing and switching between Solidity compiler versions."
  },
  {
    "name": "Frames.js",
    "description": "frames.js is the leading open source javascript library and debugging environment to help developers make Frames for Farcaster, XMTP and Lens faster & easier. \n\nWe also have been building and maintaining a library for apps to adopt frames in their apps that has been integrated by the Base team in their Base names product."
  },
  {
    "name": "go-ethereum-hdwallet",
    "description": "Ethereum HD Wallet derivations library in Go"
  },
  {
    "name": "Multicaller",
    "description": "Multicaller is a suite of hyper-optimized contracts that allows for batched calls, while allowing \"forwarding\" the `msg.sender`."
  },
  {
    "name": "Abi Ninja",
    "description": "**ABI Ninja provides an intuitive frontend for contracts from the most popular EVM networks, currently supporting:**\n\n- **Verified contracts**: Fetch contract ABIs and source code directly using Etherscan's API.\n- **Unverified contracts**: Two different options are available:\n\n  1. Provide the ABI and the contract address.\n  2. Decompile using heimdall-rs.\n\n- **Proxy contracts**: Autodetects most popular proxy patterns, and allows to read and write as proxy.\n\n![UI Image 1](https://raw.githubusercontent.com/BuidlGuidl/abi.ninja/main/.github/img/ui1.png)\n\n**It includes some nice features like:**\n\n- (mainnet!) ENS resolution on address inputs.\n- Shareable URLs with cool dynamic unfurl.\n- Show TX results.\n- Friendly UI even for complex data structures, now with dark mode!\n- Custom and Local Chains Support – Add or remove networks from a large selection, manually configure custom chains, or debug local contracts on chain ID 31337 (localhost).\n\n![UI Image 2](https://raw.githubusercontent.com/BuidlGuidl/abi.ninja/main/.github/img/ui2.png)\n  \n  \n*OP RetroFunding Rounds reported in the Funding Source section were for BuidlGuidl itself or other BuidlGuidl projects, not directly linked to Abi Ninja."
  },
  {
    "name": "bulloak",
    "description": "A smart contract test generator based on the Branching Tree Technique. "
  },
  {
    "name": "Splits",
    "description": "Splits builds software for sharing money. We provide secure contracts, intuitive interfaces, and reliable developer tools that make it easy to collaboratively receive and manage money on the internet."
  },
  {
    "name": "The Ethernaut",
    "description": "The Ethernaut is a community-driven capture-the-flag wargame that challenges developers of all levels to break smart contracts while learning common Solidity vulnerabilities. Maintained by OpenZeppelin, each level provides a gamified experience where a smart contract must be ‘hacked’ to progress. It is 100% open-source, with all levels contributed by players.\n\nIn 2024, we have continued expanding the game, adding four new advanced levels—HigherOrder, Stake, Impersonator, and Magic Animal Carousel—which explore current vulnerabilities in smart contract development. These levels introduce challenges related to low-level EVM programming, staking vulnerabilities, signature verification exploits, and bitwise manipulation attacks, pushing players to deepen their understanding of Ethereum security.\n\nBeyond new levels, we have also redesigned the UI, added support for multiple networks, and expanded language translations to make the game more accessible to a global audience.\n\nWe believe that The Ethernaut is an essential training tool for developers across the Ethereum ecosystem, including those building on the Optimism network. By continually evolving the game with new challenges and features, we strive to make smart contract security education engaging, practical, and accessible to everyone."
  },
  {
    "name": "Remix Project",
    "description": "A rich and accessible Web3 toolset for learning, building, and testing on multiple chains"
  },
  {
    "name": "Fe Language",
    "description": "Fe is a high-level language for the EVM. It is heavily inspired by Rust and implemented in it too. You can use Fe to write smart contracts for Ethereum or any EVM-equivalent platform. Currently, we are developing Fe v2, which introduces an improved type system. While it does not yet compile to EVM, users can still analyze their code using the CLI or an editor plugin."
  },
  {
    "name": "Surl",
    "description": " HTTP Library for Solidity based on curl "
  },
  {
    "name": "Otterscan",
    "description": "A blazingly fast, local, Ethereum block explorer built on top of Erigon for EVM chains"
  },
  {
    "name": "Aderyn",
    "description": "Aderyn is an open-source, public-good developer tool. It is a Rust-based solidity smart contract static analyzer designed to help protocol engineers and security researchers find vulnerabilities in Solidity code bases.\n\nAderyn integrates seamlessly into small and enterprise-level development workflows. It offers lightning-fast, command-line static analysis functionality and a framework for building custom detectors that adapt to any Solidity codebase.\n\nAderyn does three things really well:‍‍‍\nIdentify Solidity Smart contract vulnerabilities: Cyfrin Aderyn quickly identifies potential vulnerabilities in Solidity code and highlights parts of the codebase for further investigation.\n\nSupports building custom detectors to suit your needs: Protocols and security researchers can use the Cyfrin Aderyn framework to build custom vulnerability detectors for any Solidity codebase.\n\nIdentify known issues and protect OP value: Competitive auditing platforms can use Cyfrin Aderyn to detect and filter out known issues inside protocol codebases, protecting customers' and auditors' time and value.\n\nWho is it for?\n\n1. Developers\nAs a new generation of developers enters the space, we (the security community) are responsible for using our knowledge and experience to create tools that facilitate secure development practices. We need to make it easy to avoid repeating past mistakes.\n\nFrom a developer's perspective, the cost of finding bugs in Solidity code is exorbitantly high. Engaging top-tier security firms like Cyfrin Private Audits or competitive audit platforms like CodeHawks requires serious cash. That's because the security knowledge required to stamp out bugs is pooled among security firms and competitive auditors, who are in demand.\n\nWe must drive the cost of finding bugs, especially the common and known ones, towards zero by creating tools that make development secure by nature.\n\nAderyn is built for lightning-fast, open-source static analysis that hooks into the existing development workflow.\n\n2. Security Researchers\nSecurity Researchers are the knowledge guardians of the on-chain world. They are the people you engage with when you're undergoing an audit. Many auditors start every audit with a long checklist. They read through the codebase, ensuring the code doesn't violate any items on their list. If it does, it's an issue for the report. Once they've finished with this list, they get creative and try out other techniques.\n\nAderyn's detector framework enables Security Researchers to encode the patterns they look for in their checklist into Aderyn detectors. By doing this, the research community can focus on the deeper, more complex bugs, knowing that tooling has uncovered the repetitive checklist of issues so they don't have to.\n\nDevelopers write more secure code before they engage Security Researchers, and when they do, the Researchers can spend more time on complex bugs instead of manually checking for easy fixes.\n\nWhat makes Aderyn unique vs similar tools?\nSpeed: Real-time feedback as you’re coding with the upcoming vscode extension.\n\nCutting-edge detectors: The detectors are built from the latest findings from external and in-house auditors. This means developers can harness the power of an audit team at their fingertips for free!\n\n“Auditor Mode”: Helps auditors find specific areas and concepts within a codebase to dig further. For example, “Show me all of the instances in which this storage slot is altered”.\n\nOpen-source: This tool is completely open-source and will be free for all developers in perpetuity. Cyfrin does not make money directly from it.\n\nAdoption of tool: Aderyn is now used by developers across the Superchain ecosystem and we are continuously building new custom detectors for developers. \n\nImportance of tool: Security is paramount for mass adoption. Without security, adding any TVL to the Superchain is risky. We want to support developers from day zero and provide real time security analysis whilst projects are being built.\n\nSuperchain interoperability: We want to ensure that when working cross chain, builders are doing so with secure frameworks. We also include building customer detectors for interoperability. \n\nWho are Cyfrin:\nCyfrin is the industry-leading smart contract education and security company. Home to 8,000 security researchers and a community of over 100,000 students and smart contract engineers, we provide audits, tools, and education to the world's biggest decentralized protocols, institutions, and products.\n\nCyfrin works closely with Optimism and the Superchain as a whitelisted security service provider. We want to continue adding value to the Optimims ecosystem. \n\nThis project refers specifically to Cyfrin's developer tool, Aderyn."
  },
  {
    "name": "Party.app + Party Protocol",
    "description": "The Party Protocol is an open-source protocol for group coordination. It provides flexible and powerful primitives for creating a shared smart contract account governed by a group of people, big or small.\n\nParty.app is the flagship UI / app built on top. It allows groups to form a small group wallet, and large on-chain DAO, or anything in-between. Party.app has built-in functionality for crowdfunding, governance, using apps via wallet connect, buying & selling NFTs, trading tokens, chatting, and much more."
  },
  {
    "name": "Sourcify",
    "description": "Source code verification for Ethereum smart contracts: open-source, open-data, open-standards."
  },
  {
    "name": "OpenRPC",
    "description": "As the standard for Ethereum's official Execution API specification, OpenRPC is the foundational tool that guarantees L1 and L2 clients—including Optimism's—can build and interoperate reliably. For over six years, this open-source toolkit has prevented ecosystem fragmentation, saved thousands of developer hours, and served as the bedrock for client stability and innovation.\n\nWe are an Apache-licensed standard similar to OpenAPI, OpenRPC provides a free-to-use toolkit for describing JSON-RPC APIs. By enabling the generation of clear, machine-readable specifications, our project drastically simplifies the development, testing, and documentation workflow for anyone building on Ethereum, Optimism, and other L2s.\n\n"
  },
  {
    "name": "Swiss-Knife.xyz",
    "description": "Swiss-Knife aggregates all the useful EVM tools in one place to ease developer experience while they are debugging or building new stuff.\n\nList of Tools:\n1. Explorer: Quickly view any address/ens or transaction across a variety explorers, in just a click!\n2. Calldata: Decode any calldata, and view the parameters in a human-readable format, even without having the contract ABI.\n3. Transact: Send custom bytes calldata to transact with any contract, or leave the address blank to deploy a new contract.\n4. Converter: All the essential unit converters on one-page. Convert between:\n  i. Ether, wei & gwei\n  ii. Hexadecimal, decimal & binary\n  iii. String or hex to keccack256 hash & 4 bytes selector\n  iv. Hex to 32 bytes left-padded & right-padded values\n5. Constants: Have frequently used constants at your fingertips, like Zero Address, Max Uint256, etc.\n6. Epoch-Converter: Grab unix timestamp, get timestamp x minutes/hours/days in the future, or convert timestamp to human-readable format.\n7. Storage-Slots: Query EIP-1967 slots or custom storage slot value of any contract.\n8. Uniswap: Calculator to convert UniswapV3 tick to price for any token pair addresses.\n9. Character Counter: Count the length of the input string. Also allows to select on the input text to only get the character count for the selection.\n10. Contract Address: Determine the contract address which will get deployed by an address at a particular nonce"
  },
  {
    "name": "Foundry MCP Server",
    "description": "A simple, lightweight and fast MCP (Model Context Protocol) server that provides Solidity development capabilities using the Foundry toolchain (Forge, Cast, and Anvil)."
  },
  {
    "name": "Tevm",
    "description": "Tevm creates ambitous app layer tooling for developers to create great experiences for end users"
  },
  {
    "name": "Loop Decoder",
    "description": "Loop Decoder is a TypeScript library with minimal external dependencies that transforms blockchain data into a human-readable format.\n\nKey Features:\n- Works in any JavaScript environment\n- Minimal external dependencies - you only need an RPC; everything else can be fetched from your own storage\n- Highly customizable - we don't force you to use a specific API or storage; instead, we provide data loaders"
  },
  {
    "name": "Maintaining simple-optimism-node",
    "description": "I'm maintaining \"simple-optimism-node\" created by @smartcontracts, an open-source Optimism's full/archive node docker compose deployment script used by more than 320 developers and featured in the official docs.\n\nBelow are some key metrics that indicate its adoption:\n\n- Stars: 321\n- Forks: 111\n\nFrom October 1, 2023, to July 31, 2024, the following metrics were observed:\n\n- External Contributors: 3\n- Issues Opened: 34\n- Issues Closed: 30\n- Merged Pull Requests: 28\n\nHowever, the actual usage is higher, as many instances are not being tracked."
  },
  {
    "name": "Medusa",
    "description": "Medusa is a stateful smart contract fuzzer inspired by Echidna. It provides parallelized fuzz testing of smart contracts and the verification of advanced smart contract invariants.\n"
  },
  {
    "name": "VSCode Solidity Inspector ",
    "description": "This is a VSCode extension offering utilities for solidity smart-contract development. \n\nSome features:\n- Storage layout viz.\n- Inline highlighting in code editor for unused imports.\n- Generate and view - Foundry deployment report in a clean and concise table format.\n- Syntax highlighting of for .tree files.\n- Generate foundry test stub using bulloak's scaffold command.\n- Auto-complete path suggestions for importing files and dependencies (with forge remappings support).\n- Contract code size decorator.\n\nMore cool utilities planned to be released. "
  },
  {
    "name": "Revoke.cash",
    "description": "Revoke.cash provides 100% free and open source security tooling and education."
  },
  {
    "name": "Create2Deployer",
    "description": "Create2Deployer is a factory smart contract designed to make easier and safer usage of the `CREATE2` EVM opcode. Create2Deployer is a preinstall on the OP Stack: https://specs.optimism.io/protocol/preinstalls.html#create2deployer."
  },
  {
    "name": "Kontrol - formal verification tool based on Foundry and KEVM",
    "description": "Runtime Verification has been at the forefront of open-source formal verification tools for more than a decade. Our generalistic approach allows us to use our technology on multiple blockchains. While KEVM offers our verification infrastructure to all EVM-based smart contracts, Kontrol greatly reduces the barrier to entry to formal verification for Solidity smart contracts.\nOur tooling is completely open source and freely accessible to all developers of the Optimism ecosystem at no additional cost.\n\nKEVM is an EVM executable formal semantics written in the K framework. KEVM passes all Ethereum conformance tests and is the entry point for formally verifying smart contracts with the K framework. However, using plain KEVM requires ad-hoc training on the K framework to write specifications. Additionally, these specifications can be quite verbose, increasing the difficulty of writing them.\n\nKontrol solves this by allowing developers to write the formal specification of their smart contracts directly as Foundry property tests. These tests are automatically translated into KEVM specifications, keeping all the verification guarantees whilst allowing for a much more easy developer experience."
  },
  {
    "name": "beaconcha.in",
    "description": "xxx"
  },
  {
    "name": "Rundler",
    "description": "Rundler (Rust Bundler) is an ERC-4337 bundler implementation written in Rust. Rundler is designed to achieve high-performance and high-reliability in cloud deployments via a modular architecture. Currently, both Alchemy and Coinbase’s Base team use Rundler. It powers >70% of UOs in the Ethereum ecosystem and a vast majority of UOs in the Superchain. Rundler is OSS licensed with GPL.\n\nRundler powers the ERC-4337 ecosystem with an implementation that users can rely on to scale reliably. Rundler open source code repo has 300+ stars, more than 50 forks. \n\nOur goals with Rundler:\n\nERC-4337 Specification Compliance: Rundler strives to implement the full ERC-4337 specification and to maintain support as the specification changes and new onchain components are released. This includes new Entry Point contract support, support for the upcoming P2P mempool specification, support for alternative mempools, and more.\nBest-in-class Performance and Reliability: Rundler strives to power the most demanding workloads in cloud environments. Rust was chosen for its high performance and memory safety. Rundler's modular architecture lets providers choose to run the stateless components (RPC, builder) in a fully horizontally scalable manner connecting to the stateful components (mempool, p2p, event cache) via the network. Rundler's bundle builder is designed to be able to support the full gas throughput of the network it's building for.\nExtensibility/Chain Support: ERC-4337 is designed to support any EVM chain. However, different EVM supporting networks have different rules around how to support things like gas usage, gas fees, precompiles, etc. Rundler is designed to be extensible and easily adapted to support any EVM chain.\nModularity: Rundler is written in a modular manner, allowing its components to be run as a single integrated binary, or as a distributed system. Rundler also strives for its individual crates to be used to support future ERC-4337 tooling.\n\nIn RPGF Round 3, Alchemy was awarded a total of 74,534 $OP across Rundler, Light Account, ERC-6900, aa-sdk, and various informational pieces put out to the public domain to further adoption of smart accounts in the Superchain."
  },
  {
    "name": "Gelato Relay SDK",
    "description": "Gelato Relay SDK offers a convenient suite of functions in order to interact with the Gelato Relay API. Gelato Relay API is a service that allows users and developers to get transactions validated fast, reliably and securely, without having to deal with the low-level complexities of blockchains. As requests are submitted to Gelato Relay, a network of decentralised Gelato Executors will execute and get the transactions validated as soon as possible. EIP-712 signatures enforce the integrity of data, while gas fee payments can be handled in any of our supported payment methods. In this way, developers can rely on Gelato's battle-tested blockchain infrastructure improving the UX, costs, security and liveness of their Web3 systems.​ "
  },
  {
    "name": "Kurtosis",
    "description": "Kurtosis is a developer platform purpose-built to streamline the development, testing, and debugging of Web3 and blockchain-based distributed systems. It provides programmable environments that mirror real-world networks, making it easier to build and iterate on decentralized infrastructure. Think docker compose, for blockchain systems."
  },
  {
    "name": "foundry-gas-diff",
    "description": "Easily compare gas reports generated by Foundry automatically on each of your Pull Requests!"
  },
  {
    "name": "hevm",
    "description": "Hevm is an open-source, state-of-the-art EVM execution engine that uses a combination of symbolic and concrete execution to uncover bugs in smart contracts. It automatically analyzes contracts and proves properties such as the absence of runtime errors and assertion violations. In addition, Hevm can compare two contracts for equivalence, detecting potential inconsistencies.\n\nHevm is used by Echidna for both concrete and symbolic execution, by mamori.xyz to identify potential (economic) MEV extraction, and by the Vyper team to uncover bugs in compiler optimizations. It can be used as a command-line tool, through its Foundry interface, or as a library, allowing seamless integration into existing high-level tooling."
  },
  {
    "name": "Velodrome Finance",
    "description": "The central trading & liquidity marketplace on Superchain"
  },
  {
    "name": "foundry-storage-check",
    "description": "- Protect your Smart Contract Proxy from storage collisions upon upgrading, by running this action in a CI on each of your Pull Requests!\n- Feel safe when extending your storage layout by trusting this action to check that extended layout is zero-ed out on-chain!"
  },
  {
    "name": "Vscode Solidity Extension",
    "description": "Solidity support for Visual Studio code\nVersion Downloads Installs Rating\n\nSolidity is the language used in Ethereum to create smart contracts, this extension provides:\n\nSyntax highlighting\nSnippets\nCompilation of the current contract (Press F1 Solidity : Compile Current Solidity Contract), or F5\nCompilation of all the contracts (Press F1 Solidity : Compile all Solidity Contracts), or Ctrl + F5 or Cmd + F5\nCode completion for all contracts / libraries in the current file and all referenced imports\nGoto definition\nFind all references in project\nHover information\nCode actions / quick fixes (change compiler, format address, add sdpx license.. )\nMono repo support (identifies the project by finding the files: remappings.txt, foundry.toml, brownie-config.yaml, truffle-config.js, hardhat.config.js, hardhat.config.ts)\nDefault project structure (solidity files needs to be in the src/ directory, and libraries in the lib/ directory). Libraries will follow the same structure.\nCompilation supporting EIP82 (dappfile and dependency packages)\nSupport for different solidity versions (Remote and local)\nDownload source code and Abi from Etherscan\nCode generation using Nethereum, it includes currently the default template for Nethereum service, dtos generation. (Open 'contractName.json' after compilation from the bin folder. Press F1 and press Solidity: Code generate from compilation output..) Auto generation of Nethereum files on compilation\nLinting using Solhint or Ethlint\nIt is also available as a standalone LSP"
  },
  {
    "name": "Dappnode",
    "description": "Since 2018, Dappnode has been a key software for blockchain infrastructure and a big part of decentralization in Ethereum.\nDappnode is a decentralized infrastructure platform that allows users to easily host their own decentralized applications (dApps) and blockchain nodes. Dappnode makes it easy to host and run various types of blockchain software, such as Ethereum, Bitcoin, IPFS, and others. The platform also provides users with a user-friendly interface to manage and monitor their nodes."
  },
  {
    "name": "K Semantics of the Ethereum Virtual Machine (EVM)",
    "description": "We are Runtime Verification, a research and development company building rigorous tools to ensure the safety and correctness of critical systems. Our team has developed KEVM, the most complete and battle-tested formal semantics of the Ethereum Virtual Machine (EVM), written in the K Framework.\n\nKEVM is not just a specification, it is an executable specification that can be used to symbolically reason about smart contracts, run conformance tests, analyze gas usage, debug programs, and formally verify correctness properties. It passes the full Ethereum test suite and is used to verify high-value contracts, including ERC20 tokens in both Solidity and Vyper. We recently updated the semantics to support Pectra upgrade.\n\nKEVM is being actively utilized by Kontrol - our formal verification tool for Soldiity, which is actively used by leading teams in the EVM ecosystem, including Optimism, Ethereum Foundation, Lido, Uniswap, as well as security researchers and auditors across the broader Ethereum community.\n\nWe actively maintain this repository, contribute to Ethereum’s protocol evolution, and integrate with developer tooling like Foundry. Through KEVM, we are pushing the boundaries of what’s possible in provably correct and secure smart contract infrastructure."
  },
  {
    "name": "Aave",
    "description": "Aave is DeFi's largest lending protocol and one the most used protocols on Optimism."
  },
  {
    "name": "Nethereum",
    "description": "Nethereum is the .Net integration library for Ethereum, simplifying the access and smart contract interaction with Ethereum nodes both public like Geth (or your preferred client) L2 chains like Optimism, Arbitrum (or your preferred L2), any compatible EVM chain (Gnosis, etc).\n\nNethereum is developed targeting netstandard 1.1, netstandard 2.0, netcore 3.1, net451, .net 6, .net 8 and also as a portable library, hence it is compatible with all the operating systems (Windows, Linux, MacOS, Android and OSX) and has been tested on cloud, mobile, desktop, consoles and IoT.\n\nFeatures\n\nJSON RPC / IPC Ethereum core methods.\nGeth management API (admin, personal, debugging, miner).\nSimplified smart contract interaction for deployment, function calling, transaction and event filtering and decoding of topics.\nUnity 3d Unity integration.\nABI to .Net type encoding and decoding, including attribute based for complex object deserialization,\nEIP712.\nHd Wallet\nExternal signers integration (Azure, AWS)\nWallet integration (EIP6963, Metamask, WalletConnect)\nEVM Simulator\nBlockchain crawling and log indexing.\nTransaction, RLP and message signing, verification and recovery of accounts.\nLibraries for standard contracts Tokens, ENS, MUD (https://mud.dev/), Gnosis Safe\nIntegration testing\nKey storage using Web3 storage standard.\nSimplified account life cycle for both managed by third party client (personal) or stand alone (signed transactions).\nLow level Interception of RPC calls.\nCode generation of smart contracts services.\nStarter project templates and examples.\nLearning playground"
  },
  {
    "name": "evmc",
    "description": "a simple cli tool to load a contract code up in your IDE instantly."
  },
  {
    "name": "Etherspot",
    "description": "Etherspot is a multi-chain Account & Chain Abstraction development infrastructure that provides solutions for dApps, wallets, games, operating EVM-compatible rollups, or L1/L2 chains to deliver seamless cross-chain Web3 user experience by removing usability pain points.\n\nIn addition to providing Account and Chain Abstraction features, Etherspot helps developers make their projects compatible with the latest Ethereum standards, including ERC-4337, ERC-7579, and EIP-7702, by offering a wide range of cutting-edge services such as Bundler and Paymaster services, APIs, and more.\n\nEtherspot is pioneering the ERC-4337 shared mempool innovation, which is already live on Optimism."
  },
  {
    "name": "Modular Account",
    "description": "Alchemy Modular Account v2 is a highly modular, upgradeable, and cost-efficient smart contract account designed to improve wallet functionality.  It enables smart features for wallets like gasless, batched transactions, allow/deny lists, multi-signature, session keys and more. Fully compatible with ERC-4337, EIP-7702, and ERC-6900, Alchemy Modular Account sets a new standard in flexibility, security, and efficiency for smart accounts on Ethereum and the Superchain. Modular Account has been adopted by several enterprise grade users building onchain, such as becoming the default account for Derive’s rollup. All versions of Modular Account are OSS licensed with GPL.\n\nWith the release of v2 in February 2025, Alchemy Modular Account has become the most cost-efficient smart account on the market. Recent benchmarks from our AA_benchmark tool shows that Alchemy Modular Account consistently achieves the lowest fees across all operations.\n\nAlchemy Modular Account emphasizes developer experience and ecosystem growth, with robust adoption indicated by over 121 stars and 43 forks on GitHub. Alchemy Modular Account implements the ERC-6900 standard, co-authored by Ethereum Foundation, Circle, Alchemy, Trust Wallet, and Quantstamp, aimed at eliminating fragmentation & enabling seamless integration of interoperable, standardized modules.\n\nERC-6900 standardizes interactions between smart accounts and modules, empowering developers to easily extend wallet functionality with features like session keys, multi-signatures, gasless transactions, and advanced security controls. This modular approach ensures minimal platform lock-in, lower development overhead, and a vastly improved user experience.\n\nAlchemy Modular Account v2 is designed for innovation, welcoming open-source contributions to continuously expand functionality and security, ultimately accelerating the adoption of modular smart accounts across the Ethereum and Superchain ecosystems."
  },
  {
    "name": "ZK Email",
    "description": "We let anyone make trustless identity proofs on-chain through intuitive, private email verification. We do this via verifying partially redacted ZK proofs of any sent or received email on chain. We provide audited open source code and SDKs to construct new ZK circuits, infrastructure to use them within front ends, and infrastructure to make proofs on chain."
  },
  {
    "name": "Crytic-Properties",
    "description": "Crytic-Properties is a suite of re-usable security tests for some of the most widely used token standards such as ERC20, ERC721, ERC4626, and more.\n"
  },
  {
    "name": "Stargate Finance",
    "description": "Stargate is a fully composable liquidity\ntransport protocol that lives at the\nheart of omnichain DeFi.\n\nWith Stargate, users & dApps can transfer native assets cross-chain while accessing\nthe protocol’s unified liquidity pools with instant guaranteed finality. "
  },
  {
    "name": "Impersonator.xyz",
    "description": "Log-in to dapps as any address via WalletConnect, iFrame or Browser Extension\n\nImpersonator has benefitted the following Optimism users:\n- Traders: With impersonator they can log-in to dapps as whale wallets and study how they have setup their positions in detail.\n\n- Dapp users: They can access dapps on-the-go in view-only mode! They no longer have to keep their Metamask or Hardware wallet nearby just to visit the dapp dashboard. Impersonator works without private-keys.\n\n- Developers:\n- They can test how their dapp would respond for users with various token balances\n- Grab the transaction calldata being generated by dapps and simulate it via tenderly"
  },
  {
    "name": "Aragon OSx",
    "description": "Aragon was founded in 2016 with the belief that the fate of humanity will be decided at the frontier of technological innovation and human collaboration. Aragon launched the first DAO Framework in 2017 which secures over $40 billion in TVL. Aragon’s tech stack allows anyone to launch a DAO, enabling organizations to securely govern their protocols and assets onchain."
  },
  {
    "name": "Brahma",
    "description": "Brahma provides the infrastructure for automated operations from any source with programmable accounts, specialized agents, and developer tools that keep users in control at all times."
  },
  {
    "name": "Skandha ERC-4337 Bundler",
    "description": "Etherspot's developer-friendly TypeScript ERC-4337 bundler that enhances transaction management, optimizes gas costs, and improves the overall efficiency of blockchain interactions. It supports Shared Mempool and provides built-in MEV protection. \n\nEtherspot is pioneering the ERC-4337 shared mempool innovation, which is already live on Optimism."
  },
  {
    "name": "Act",
    "description": "Act is a smart contract specification language and toolkit for formal verification. Act specifications are a formal, high-level description of all possible behaviours of an EVM program. Act allows many existing general purpose verification tools to be leveraged to prove properties about the specification. Such tools include SMT solvers (cvc5, z3, bitwuzla), theorem provers (Coq) and economic analysis tooling (CheckMate, Open Games). Act specifications can be automatically proved equivalent to concrete implementations in EVM. For very simple contracts, Act specifications can be automatically generated from EVM bytecode.\n\nThis is an end-to-end pipeline that supports principled reasoning about high level properties of EVM bytecode. It supports reasoning about both correctness (e.g. accounting invariants) and economic properties (e.g. incentive compatibility). Act specifications serve as a high-level smart contract representation, allowing for easy integration of existing general purpose analysis and verification tooling into the EVM context."
  },
  {
    "name": "Mint Club",
    "description": "Mint Club provides a seamless platform for creating bonding curve-backed tokens or NFTs, using any ERC20 token as the base asset in the bonding curve pool. It facilitates easy tokenization with a completely no-code solution, offering highly customizable bonding curve designs, adjustable creator royalties, a variety of creator tools, and a user-friendly interface for trading bonding curve assets."
  },
  {
    "name": "dwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadwdwawdadw",
    "description": "wadadwdwaade"
  },
  {
    "name": "Node Guardians",
    "description": "Node Guardians is a gamified educational platform for intermediate to advanced developers. We create lore-rich programming challenges for accomplished Solidity developers. Think of it as a skill-based RPG for developers and a platform to showcase their abilities. "
  },
  {
    "name": "Opstack For Cats Dream ☑️",
    "description": "I am a builder who deals with the production of nft in all L2s. I create my NFTs with artificial intelligence. I think my imaginary collection of cats is worthy of receiving an award on optimism."
  },
  {
    "name": "MonstersOnBase",
    "description": "Hello, I am a designer. I am an artificial intelligence designer. I am 25 years old. I'm from Turkey. I need some support. I want to do more for Optimisim. I don't know much about Github. But everything I did here is as you want. I increased the on-chain activity and interacted with 420 wallets."
  },
  {
    "name": "Ethernal",
    "description": "Ethernal is an open source block explorer for evm chains.\nSpinning up a fully customised explorer only takes a couple of seconds, either through the UI or the API.\nIt includes a faucet UI, a dex UI, and can be customised to cater to network specificities, like custom 3rd party libraries, or custom contract & transaction post processing.\nIt also includes advanced token & network analytics, contract verification, nft galleries, etc.."
  },
  {
    "name": "solid-grinder",
    "description": "A 100% opensource CLI that goes along with building blocks of smart contract. This toolbox can reduce L2 gas cost by encoding calldata for dApps development to use as little bytes of calldata as possible."
  },
  {
    "name": "Purrmissionless Proofs",
    "description": "Purrmissionless Proofsallows developers to test, simulate, and fine-tune their blockchain networks in a sandbox environment. Featuring purr-fectly tailored tools like \"Meow Metrics\" for performance monitoring and \"Scratch Testers\" for stress testing, it ensures your blockchain is as agile and reliable as a cat landing on its feet!"
  },
  {
    "name": "Dspyt",
    "description": "Dspyt is an innovative online platform dedicated to bridging the gap between data science, blockchain technology, and programming education. Our mission is to empower programming enthusiasts through high-quality educational resources and community engagement, fostering a deep understanding of decentralized technologies.\n\nAs part of our commitment to supporting the blockchain development community, we are excited to introduce our latest GitHub repository: the Mantine + RainbowKit + Next.js Template. This powerful template is designed to kickstart your Web3 development journey by providing developers with a streamlined setup for building modern, interactive applications that leverage blockchain technology seamlessly.\n\n\nProject Overview\n\nRepository: Mantine + RainbowKit + Next.js Template\nLink: https://github.com/Pfed-prog/Mantine-Web3-Template\nTopics: TypeScript, ReactJS, Next.js, Web3\nOur web3 template integrates the following features:\n\nUser-Friendly Framework: Built with Mantine for responsive UI components and RainbowKit for wallet integration, our template simplifies the process of creating engaging user interfaces and streamlined blockchain interactions.\nSeamless Blockchain Interaction: Utilize Next.js for efficient server-side rendering and routing, combined with optimized integrations for various blockchain protocols, enabling developers to create fast and responsive decentralized applications.\nEducational Resource: Accompanying documentation and examples guide users step-by-step in utilizing the template effectively, further enhancing their skills in modern blockchain development.\nAlignment with Optimism Collective\nWe believe that our Mantine + RainbowKit + Next.js Template aligns strongly with the goals of the Optimism Collective by:\n\nEnhancing Developer Education: By providing resources and tools that aid developers in creating on-chain applications, we contribute to building a more proficient and engaged community.\nFacilitating Cross-Chain Development: Our template is designed with interoperability in mind, supporting developers in easily creating applications that can communicate across multiple chains, thereby expanding the reach and capabilities of the Superchain.\nPromoting Innovation: By equipping developers with the right tools and frameworks, we encourage the creation of innovative projects that can enhance the ecosystem of Optimism and beyond.\nWe are excited about the opportunity to contribute to the vibrant community of the Optimism Collective and are committed to fostering an environment where development flourishes. We believe that with the support of the Retro Funding initiative, we can further enhance our offerings and impact the blockchain education landscape significantly.\n\nThank you for considering Dspyt and our contributions to the Optimism ecosystem."
  },
  {
    "name": "Blockhead",
    "description": "Open-source portfolio tracker and explorer interface for the decentralized web. https://blockhead.info"
  },
  {
    "name": "EVM Explorer",
    "description": "We are excited to introduce EVM Explorer, a powerful, open-source web interface designed to streamline the exploration and analysis of blockchain data across multiple EVM chains, including the Optimism ecosystem. EVM Explorer utilizes the BlockScout API and viem library to enable users to delve into transaction patterns, user behavior, and smart contract data, providing a versatile tool for efficient and insightful blockchain exploration."
  },
  {
    "name": "Blobs Guru",
    "description": "Blobs.Guru is a data availability (DA) analytics platform designed to provide real-time insights into blockchain scalability. It focuses on metrics like transaction costs, storage efficiency, throughput, and performance comparisons for Layer 2 networks and DA solutions. With support for EIP-4844 blobs, Avail DA, and planned integrations with other providers like EigenDA, the platform empowers developers, researchers, and the community to optimize infrastructure, monitor DA performance, and make data-driven decisions. Blobs.Guru bridges the gap between technical data and actionable insights for a scalable blockchain ecosystem."
  },
  {
    "name": "Samba",
    "description": "Samba is a Portal Node that serves as an interface to the Portal network, facilitating connections between Portal nodes to form a decentralized, peer-to-peer network. Initially, Samba enables users to request data associated with the History subnetwork (in progress)\n\nHowever, as the project evolves, the goal is to expand Samba's capabilities to support all sub-networks outlined in the Portal specifications.\n\nSamba is written in Java and is built on the foundations of Teku and Besu."
  },
  {
    "name": "AbstractionKit | Account Abstraction Library",
    "description": "AbstractionKit is typescript library designed for Ethereum Account Abstraction. It simplifies the standard's complexities and provides a robust foundation for developing smart wallet applications. AbstractionKit is used in conjunction with Ethereum interfaces like ethers, viem, and wagmi. It remains service-agnostic, offering compatibility with any Node, Bundler, or Paymaster provider. Key features include Passkeys Login, Gas Sponsorship and Social Recovery. AbstractionKit is used by smart wallets that are breaking new ground in Ethereum UX, such as Morpher, Unit-e, BackPack, JOIN, and many others. It is built and maintained by Candide, a small independent team that has been redefining Ethereum user experiences since 2022."
  },
  {
    "name": "Smellcheckmate",
    "description": "Smell Checkmate is the first and only mobile app that allows you to rate others' hygiene, smell, and attitude anonymously. Our goal is to help people become aware of their appearance without hurting their feelings. Solving the Gap over the world..!!"
  },
  {
    "name": "CodeTracer",
    "description": "CodeTracer is a user-friendly time-traveling debugger designed to support a wide range of web3 programming languages."
  },
  {
    "name": "Newsletter",
    "description": "Weekly newsletter with round-up of the most important news happening around privacy in Web3."
  },
  {
    "name": "evm-rpcs-list",
    "description": "Easy to use package with List of EVM chains & their RPCs in one place. Sourced from chainlist.org.\n\nUsage:\n`npm i evm-rpcs-list`\n`import networksList from \"evm-rpcs-list\";`"
  },
  {
    "name": "Superfuse",
    "description": "Superfuse, is a toolchain and knowledge hub to build cross-chain contracts in Superchain Ecosystem. It includes:\n\n1) Superfuse wizard: It is a code generator/ interactive developer playground to develop a part of smart contract/deploy script/ test suites out of components from cross-chain specification. Select kind of contract that you want (eg. ERC7802, SuperchainERC20, and ERC20Votes).\n\n\n2) suerfuse-forge: a developer-friendly framework/library in solidity to build a variations of cross-chain contracts in superchain Ecosystem"
  },
  {
    "name": "Open Labels Initiative",
    "description": "This initiative tackles the issue of isolated and non-standardized datasets of address labels within the blockchain community. It introduces a flexible, open and community owned framework for anyone to use and contribute to. In addition to the framework, we also provide tooling for an open labels pool (based on attestations) as well as trust algorithms."
  },
  {
    "name": "DistriButler: Multi Token Sender for Optimism, Base & Arbitrum",
    "description": "DistriButler is a powerful multi-token sender Dapp built to streamline airdrops, rewards, and bulk transfers across Optimism, Base, and Arbitrum networks. With a focus on simplicity, security, and efficiency, it allows users to effortlessly send multiple tokens to numerous addresses in a single transaction. DistriButler reduces the complexity of managing large distributions while saving on gas fees, making it an ideal tool for Web3 projects needing efficient token transfers."
  },
  {
    "name": "forge-stack-tracer",
    "description": "CLI tool that converts your Foundry test output into interactive stack traces!\n\n✨ Powered by Swiss-Knife.xyz Calldata Decoder to decode even the unverified contracts!\n\nUsage:\nSimply pipe the forge tests result into fst.\n```forge test --mt test_case -vvvv | fst```"
  },
  {
    "name": "DEO AI: Ethereum Developer Assistant",
    "description": "DEO is an AI-powered assistant is designed to help Ethereum developers efficiently query and retrieve relevant documentation, references, and best practices from official sources, forums, and technical guides. By leveraging NLP and retrieval-augmented generation (RAG), the agent will allow developers to ask natural language questions and receive precise, contextual answers from Ethereum's technical ecosystem.\n\nThe agent will integrate with major Ethereum knowledge bases such as the Ethereum Developer Portal, Solidity documentation, EIPs (Ethereum Improvement Proposals), and Web3 libraries, streamlining research and troubleshooting for developers. It will also provide code snippets, explanations, and best practices in response to queries.\n\nI am psychemist, a seasoned full-stack developer focused on building Web3 products to advance a decentralized internet and native digital money. With a strong background in Ethereum’s ecosystem, I contribute to open-source projects and develop practical tools, devtools, and blockchain applications. My expertise spans smart contract development, decentralized protocols, and AI-driven tooling. For this grant, I am leveraging my experience to build Deo, an AI-powered assistant that enhances developer efficiency by providing intelligent, context-aware access to Ethereum documentation. Through Retrieval-Augmented Generation (RAG) and scalable AI models, Deo aims to streamline research, debugging, and smart contract development, making Ethereum’s complex knowledge base more accessible."
  },
  {
    "name": "Router Protocol",
    "description": "Router is an cross chain infraproject \nRouter Nitro is a trustless, ultra-low latency bridge built using Router chain’s middleware construct. It transfers user funds across chains in less than 30 seconds, and is more than 20% cheaper than the next cheapest bridge in the market. It currently supports 19 chains:\n"
  },
  {
    "name": "Web3j",
    "description": "Web3j is the Java and Android integration library for Ethereum.\n\nCreated in 2016, and still going strong in 2025 it is core plumbing to Ethereum for one of the world's most widely used development platforms, the JVM.\n\nIt has been downloaded millions of times, and is used by everyone including\n- Enterprises such as J.P. Morgan, Fnality and NTT Data\n- Web3 infrastructure companies such as Alchemy \n- The Besu Ethereum Execution client\n- It's even been integrated natively into the Android OS by Freedom Factory in ethOS which powers the  upcoming Ethereum phone the DGEN1\n\nWe decided in 2024 to bring Web3j into the Hyperledger Foundation, which provides high-quality governance of open source (similar to the Apache Foundation). It's still, the same team at Web3 Labs responsible for maintaining and supporting the library for its wide and varied user base. The Hyperledger association is great for visibility, but doesn't provide any funding for the project!\n\nWe had success in OP RPGF 2, but missed out on OP RPGF 3 as we had not realised projects were eligible for multiple RPGF rounds!\n\nWe rely on grant funding to sustain this library and hope to qualify for this RPGF round.\n\n🙏"
  },
  {
    "name": "EvmTools",
    "description": "Evmtools (previously zkblock) started as a boilerplate for developing zk dapps using circom (groth and plonk). But since the inception, it has grown to include variety tools required to develop zk and web3 dapps. These tools help during development of variety of dapps inlcuding zk-snarks based dapps, whitelisting contracts, contracts using EIP-712 signatures such Aave credit delegation, custom signatures, raw transaction decoder, determining contract addresses, understand on-chain slot structure etc.\n\nThe goal of evmtools is to help users to debug, build and ship web3 apps. Since, the inception we have included several features to make evmtools useful for development.\n\nWe have built whole suite of (20+) tools for developers. These tools help developers to test and debug during development. Some of the tools include-\n\nUniswap V4 Hooks tools\nMerkle Tree Generator (using secure openzeppelin libraries, provides easy debugging for whitelisting)\nEVM Transaction Decoder\nBit Manipulation, masking etc\nGeneral Utility tools\nGas converter, byte conversion, hex conversion etc.\nEpoch Converter\nGenerate burner addresses\nChecksum Formatter\n\nAll tools are available in an extension as well. "
  },
  {
    "name": "Smart Account Contracts | By Candide ",
    "description": "Candide offers open-source smart contracts designed for teams that are pushing the boundaries of Ethereum UX with Account Abstraction. Our contracts includes a formally verified and audited Social Recovery module, a Paymaster contract for gas sponsorship, and a BLS Account. These solutions are trusted by high-profile projects like Safe, Worldcoin, and many others. Candide is a small independent team that has been redefining Ethereum user experiences since 2022."
  },
  {
    "name": "blocksmith.js",
    "description": "blocksmith.js is a minimal Javascript testing framework for Ethereum contract development using foundry-rs and ethers.  It is a lightweight wrapper around forge and anvil, so you can script Foundry however you want.  It is primarily designed for developing cross-chain applications that cannot be tested inside of a single EVM instance."
  },
  {
    "name": "Test Project",
    "description": "Test Description"
  },
  {
    "name": "Skeleton ERA 💀",
    "description": "Hello, I am an NFT designer. I have created 4 solid collections in Superchain. I am 25 years old. And I want to do more."
  },
  {
    "name": "8 Bit Cats☑️",
    "description": "8-bit cats are NFTs produced with artificial intelligence. It is a successful nft collection that has reached 420 network interactions on the base network with its unique designs."
  },
  {
    "name": "Optimism × Py-libp2p",
    "description": "👋 Hey Optimism Collective!\n I’m a PLDG Developer (https://github.com/seetadev/pldg-dashboard), an initiative by Protocol Labs, Digital Public Goods Builder on Optimism and Filecoin, and Py-libp2p maintainer (https://pypi.org/project/libp2p/ ). My work focuses on protocol design, EVM compatibility, and decentralized infrastructure for Filecoin, libp2p, and IPFS. Through Py-libp2p, I’m committed to Ethereum and Filecoin scaling, decentralized storage, and on-chain compute, creating public goods that empower the Ethereum ecosystem.\n\n🚀 Scaling Optimism and Filecoin with Py-libp2p\n\n1️⃣ Token-Gated Access for Public Goods\nWe’re developing Py-libp2p-powered ERC-20 utility tokens on Optimism and Filecoin Mainnet, enabling decentralized access control for healthcare and mobility use cases. This ensures:\n ✅ Fair, trustless access to decentralized services\n ✅ Efficient and transparent resource allocation\n ✅ Cross-chain compatibility between Optimism, Ethereum, and Filecoin.\n\n2️⃣ Enhancing Developer Tooling with Py-libp2p\nWe’re optimizing Py-libp2p for seamless integration with Filecoin and Optimism’s OP Stack, enabling Ethereum developers to leverage libp2p’s trustless, scalable networking. Key improvements include:\n ✅ QUIC transport for high-speed, low-latency communication.\n ✅ TCP & WebRTC-based connections for decentralized apps.\n ✅ Optimized modularity to support Optimism and Filecoin’s developer ecosystem.\n\n3️⃣ EtherCalc Integration for Data Management & Visualization\nWe’re integrating EtherCalc, a decentralized spreadsheet, for tabulation, computation, organization, and visualization of data across OP Stack and Filecoin. This supports:\n ✅ On-chain and off-chain data organization for Optimism projects.\n ✅ Collaborative, real-time data visualization.\n ✅ Decentralized governance and analytics.\n\n4️⃣Performance Optimization: Gossipsub Metrics with Shadow Simulator\nTo ensure scalability and reliability for Optimism and Filecoin’s modular stack, we are using Shadow, a high-fidelity network simulator, to evaluate and optimize Gossipsub performance in Py-libp2p. This enables:\n ✅ Scalability benchmarking of Gossipsub under real-world traffic loads.\n ✅ Latency and message propagation analysis to optimize libp2p pubsub.\n ✅ Network resilience testing under adversarial conditions.\n\nAdditionally, we are Dockerizing the Shadow simulation output to provide real-time visualizations with EtherCalc.\nBy integrating these performance metrics, Optimism builders gain a more scalable, fault-tolerant, and efficient networking layer for rollups and decentralized applications.\n\n🔗 Why This Matters for Optimism\n1️⃣ Decentralized Networking for Modular Ethereum\n Py-libp2p strengthens Optimism’s modular rollup architecture, providing decentralized networking and storage solutions.\n2️⃣ Interoperability for Public Goods\n Connecting Filecoin and Optimism unlocks scalable storage and compute for Ethereum builders.\n3️⃣ Optimized Performance with Gossipsub\n Shadow simulator benchmarks will improve libp2p's pubsub efficiency, reducing latency and increasing throughput.\n4️⃣ Open-Source Developer Tooling\n All Py-libp2p advancements remain open-source, benefiting Optimism and the broader Ethereum ecosystem.\n\nPy-libp2p is not just a tool—it’s the backbone for scalable, decentralized, and high-performance networking for P2P builders in Optimism and Filecoin eco-system. Let’s build it together!🚀 \n\n\n"
  },
  {
    "name": "Simbolik - Solidity Debugger",
    "description": "We are Runtime Verification, a team specializing in formal methods and blockchain security. Simbolik is the tool we developed in-house, a powerful Solidity debugger that combines traditional breakpoint debugging with symbolic execution, enabling developers to explore every possible execution path and uncover vulnerabilities with precision.\n\nAvailable as a VSCode extension, Simbolik integrates seamlessly into existing workflows, offering breakpoint-style debugging, Solidity and EVM-level inspection, and formal verification capabilities. Adopted by organizations like Lido, Optimism, Ethereum Foundation, and others, Simbolik helps Superchain builders write more secure and reliable smart contracts."
  },
  {
    "name": "Diamondscaffold: Simplifying EIP-2535 Diamond Architecture Development",
    "description": "Diamondscaffold is a CLI tool designed to streamline the development of EIP-2535 diamond structures. Supporting both Hardhat and Foundry, it provides ready-to-use templates for ERC20, ERC721, and a default Diamond structure, allowing developers to efficiently scaffold modular smart contracts. With JavaScript/TypeScript compatibility, automated dependency installation, and an intuitive setup process, Diamondscaffold accelerates project deployment while ensuring flexibility and scalability. By making diamond contract architecture more accessible, this tool fosters innovation within the Ethereum and Optimism ecosystems, empowering developers to build robust, upgradeable, and efficient smart contracts."
  },
  {
    "name": "New Project",
    "description": "This is my project"
  },
  {
    "name": "RainbowKit Theme Generator",
    "description": "Easily create custom RainbowKit theme from a single color that you can copy and paste into your web3 apps."
  },
  {
    "name": "OP ENS Gateway by Opti.Domains",
    "description": "Opti.Domains has developed an ENS Gateway implementation for OP Stack chains that supports various proofs, including those from L2OutputOracle, Dispute Game, and Anchor State. The appropriate proof is automatically selected based on the configuration of the OP Stack chain.\n\nThe Opti.Domains ENS Gateway automatically upgrades in response to the OP Stack's transition from L2OutputOracle to Dispute Game, requiring no manual intervention or updates to the verifier contract or gateway server.\n\nThe ENS Gateway, specifically the EVMGateway, enables trustless cross-chain data retrieval for ENS names deployed on Layer 2 networks like Optimism with a CCIP Gateway. When an ENS name lookup occurs, the resolver reverts with OffchainLookup containing the gateway URL. The client then contacts the gateway, which returns the requested data. This data is passed to a callback function on the resolver for verification before being returned to the client as the final result of the name lookup.\n\nOur ENS Gateway has a mechanism to ensure liveliness even in the event that the respected dispute game type has suddenly changed, as seen in the recent proposal, 'Upgrade Proposal #10: Granite Network Upgrade,' by storing a backup dispute game type and only trusting its anchor state.\n\nOpti.Domains has also developed social verification and attestation to EAS in collaboration with Bored Town. We are on our way to scaling ENS to OP. We have contributed to the ENS OP Gateway development, which is currently under review by ENS core developers.\n\nThe Namespace team has expressed interest and reached out to us with questions about using our OP ENS Gateway. Additionally, several teams have participated in discussions regarding the development of our OP ENS Gateway."
  },
  {
    "name": "Moccasin",
    "description": "What is it?\nMoccasin is an open source, public-good developer tool. It's a python-based Vyper smart contract development, deployment, and testing framework.\n\nWhy is it needed?\nThe Web3 Python ecosystem has been overshadowed by the Rust and Javascript ecosystems, which is a crucial misstep when all financial and AI developers use Python. Walk into any asset manager or hedge fund and ask the portfolio managers or traders what they are using, and the answer is Python. We need a fast and modern tool for Python exploration. \n\nVyper adds to smart contract language diversity, which is as important as having client diversity from the blockchain infrastructure. If one has a critical bug, we minimize the downside by having different languages.\n\nHow is it unique?\nMoccasin is the fastest Python framework and, for Vyper smart contracts, even outpaces Foundry in some instances. It achieves this speed by being built on the lightning-fast Titanoboa tool.\n\nYou can see a quick benchmark of compile time for Vyper contracts across popular frameworks like Apeworx and Foundry.\nhttps://github.com/Cyfrin/Moccasin/blob/main/docs/source/_static/stats-default.png?raw=true\n\nWhat can it do?\nEncrypt keys\nRun tests\nUnderstand deployment contexts\nAnd ideally work with the growing number of non-EVM compatible chains (ie, ZKsync, Scroll, etc)\nRun fuzzing campaigns\n\nMoccasin is a new tool, but due to its speed and developer friendliness, we expect to see its adoption skyrocket in the Python community.\nWhat really sets Moccasin apart, other than being the fastest and most developer-friendly Python tooling for Viper, is that developers can now script and perform DevOps in the user-friendly language Python.\n\nWhat is our roadmap?\nYou can see a list of 0.4.0 roadmap items (and other priority items) for Moccasin including:\nbetter multi-sig & hardware wallet integration\nin-line debugger\nSolidity support\nMedusa fuzzing\nbuillt-in halmos or HEVM support\n\nWho is it for?\nPython developers. According to the Stack Overflow 2024 survey, python is the #1 programming language for new developers.\nSo, Moccasin is for new developers.\nAccording to Upwork, Python is the #1 language for people working in AI.\nSo, Moccasin is for AI developers.\nAccording to Columbia Engineering, python is the #1 language for fintech.\nSo, Moccasin is for financial developers, including DeFi.\nThis tool is meant for both new and advanced developers - a tool that is easy to pick up and powerful enough for professional applications. (edited) \n\nWith this tool, we want to start bridging the gap between web2 and web3 developers and encourage builders to move into our industry. Allowing developers to use multiple languages and to grow the adoption of the Sueprchain.  \n"
  },
  {
    "name": "Dragons On Op Stack 🔴",
    "description": "Hello, I am a designer. I am an artificial intelligence designer. I am 25 years old. I'm from Turkey. I need some support. I want to do more for Optimisim. I don't know much about Github. But everything I did here is as you want. I increased the on-chain activity and interacted with 420 wallets."
  },
  {
    "name": "TOCD Studio",
    "description": "TOCD Studio is open-sourced & onchain Studio developing solutions with gamification for people's needs. So far for the past 2 years, we developed 4 products:  \n> The Old Castle Defense - Onchain game with $500,000+ earned by users and 30,000 active players;\n> DRS - onchain referral system with instant rewards; \n> FGE (Frame Generated Engine) - An open-sourced framework for Farcaster frames. Create Frames without code needs;\n> $FOMO - Community Meme Token;"
  },
  {
    "name": "Hermes - a GossipSub listener and tracer for libp2p-based networks.",
    "description": "The ProbeLab team has recently built Hermes, a GossipSub listener and tracer for libp2p-based networks. Hermes-based experiments aim to measure the efficiency and performance of the GossipSub message broadcasting protocol in any libp2p-based network. Acting as a light node of sorts, Hermes can help developers collect valuable data and tune their network’s protocols based on the message propagation latency, control message overhead and a variety of other metrics. Hermes currently supports the Ethereum consensus layer network.\n\nThe ProbeLab team specialises in network-layer measurements and monitoring. The team operates a variety of tools and uses the data it collects to propose network protocol optimisations."
  },
  {
    "name": "Seamless Protocol",
    "description": "Seamless Protocol is the largest native lending and borrowing DeFi platform on Base."
  },
  {
    "name": "zkCodex",
    "description": "zkCodex is a comprehensive blockchain analytics platform that enhances how users engage with and analyze EVM-compatible networks. By combining powerful tracking capabilities with advanced DeFi tools, zkCodex offers an all-in-one solution for blockchain interaction and analysis.\n\n\n#Analytics & Tracking\nMulti-Chain Support: Monitor activities across 35+ networks including Ethereum, Optimism, Base and Ink...\nReal-time Analytics: Track transaction volumes, smart contract interactions, and daily activities\nPerformance Metrics: Analyze wallet performance through comprehensive scoring and detailed metrics\n\n#On-Chain\nGM Streak: Build daily streaks and earn rewards\nContract Deployer: Deploy tokens, NFTs, and contracts\nCounter: Multi-network transaction tool\nDApp Interactions: Engage with blockchain apps seamlessly\n\n\n#Tools & Utilities\nSmart Contract Tools: Deploy and interact with contracts securely\nTransaction Management: Monitor and analyze your transaction history\nEVM Utilities: Access essential tools for blockchain operations"
  },
  {
    "name": "OP STACK DEPLOYER",
    "description": "OP Stack Deployer is a comprehensive tool designed to streamline the setup and deployment of an OP Stack chain. By automating complex tasks, it offers a seamless experience for developers. Whether you're an experienced blockchain developer or a newcomer, OP Stack Deployer provides the necessary resources to quickly get your OP Stack-based EVM Rollup operational."
  },
  {
    "name": "Fractal Visions",
    "description": "Fractal Visions is a multifaceted creator platform that helps supercharge impact initiatives on the superchain.\n\nImpact initiatives from across the planet need more visibility for the intention behind their cause. Audio, Visual, A.i., ReFi, and DeSci projects often have a hard time finding their path in the blockchain space which is why we are here. \n\nFractal Visions impact initiative platform is utilizing the public goods ethos of Optimism with a retroactive rewards mechanism generated by the marketplace fee from sales to attract authentic creators or developers who are making a significant change with meaningful impact in the real world."
  },
  {
    "name": "Upnode Deploy",
    "description": "NEW UPDATE: We are currently developing a GUI and CLI tool that let developers configure and deploy an OP Stack chain easier powered by op-deployer and kurtosis. >>> https://uproll-web.vercel.app, https://www.npmjs.com/package/uproll-cli (In Development)\n\nUpnode Deploy allows chain operators and developers to quickly launch their OP Stack chain with the necessary infrastructure, including an explorer, bridge, faucet, and monitoring system, by modifying a few environment variables related to the RPC endpoint, private keys, and chain information.\n\nWith a single Docker Compose command, they can launch and manage every component of the OP Stack chain, including the ability to deploy a replica node by providing `rollup.json` and `genesis.json`. Upnode Deploy also offers a user interface similar to Conduit, which simplifies the OP Stack deployment process.\n\nUnlike Conduit, Upnode Deploy provides developers and chain operators with a tool to deploy OP Stack chains on their own servers instead of relying on third-party managed servers. Upnode Deploy is free, open-source, and fully transparent, whereas Conduit is a paid, closed-source solution.\n\nUpnode Deploy supports the latest OP Stack v1.9.0 and is prepared for the upcoming migration from `pnpm` to `just`.\n\nUpnode Deploy has won Fraxtal Hackathon: https://dorahacks.io/buidl/13971\n\nVideo of docker compose deploying an OP Stack L3 on Fraxtal: https://www.youtube.com/watch?v=8dytrXGjDG4"
  },
  {
    "name": "foundry-devops",
    "description": "A tool to get the most recent deployment from a given environment in foundry. This way, you can do scripting off previous deployments in solidity."
  },
  {
    "name": "Chimera",
    "description": "Chimera is a framework to write Solidity tests in foundry and be able to reuse them with other Open Source Tools such as Echidna, Medusa, Halmos and Kontrol"
  },
  {
    "name": "discord-deepseek-r1-bot",
    "description": "First-ever Discord Bot with Deepseek R1 (Runs locally or with API)"
  },
  {
    "name": "Hats Protocol",
    "description": "The organizational graph protocol: encode your organization's roles, agents, and permissions into a programmable graph with Hats Protocol"
  },
  {
    "name": "SuperUI - UI for Supersim",
    "description": "SuperUI is an UI for Supersim designed to make building on Superchain easier. We provide a user-friendly interface for testing, simulating, and debugging OP Stack applications. With SuperUI, you can fork networks, deploy smart contracts, and inspect chain state—all without relying solely on CLI commands. Our goal is to simplify the development process and support builders in creating seamless Superchain applications."
  },
  {
    "name": "PinSave",
    "description": "PinSave is a pioneering decentralized platform designed for image, video sharing, and content aggregation. Our mission is to empower users by granting them complete control over their content and the platform itself, thereby fostering a vibrant community centered around decentralized principles.\n\nKey Features\n\nDecentralized Content Feed: Our platform features a decentralized feed, enhancing content discovery and user engagement through community-driven feedback.\n\nDecentralized Identity (ERC-725): We prioritize user anonymity and data protection with our implementation of Decentralized Identity, ensuring that personal information remains secure while users interact on the platform.\n\nUpgradeability and Resilience: PinSave leverages decentralized storage solutions, making it open, upgradeable, and resilient against potential data loss.\n\nSmart Contracts: Our use of smart contracts ensures that web experiences can be securely served directly to users without intermediaries.\n\nImpact\n\nPinSave enhances the user experience within the Optimism Collective by building a community-focused platform that emphasizes privacy, security, and user empowerment. By integrating decentralized identities, we establish an environment of trust, allowing users to share content freely without the fear of compromising their personal information. As a result, PinSave is not only a valuable tool for sharing digital content but also a cornerstone for a user-centric decentralized ecosystem.\n\nRoadmap\nMoving forward, we aim to:\nImprove read and write speeds for enhanced content accessibility.\nOptimize SEO for greater platform visibility.\nExpand our network by adding more IPFS providers.\nFurther research the capabilities of ERC-725 contracts for user identity management.\nEnhance the user interface and experience for content uploading and profile management."
  },
  {
    "name": "Jobs",
    "description": "One-point-of-entry to privacy jobs market."
  },
  {
    "name": "Academy",
    "description": "Training, incubation, and acceleration programs for non-tech people and devs to start in the web3 privacy ecosystem."
  },
  {
    "name": "growthepie 🥧📏 Ethereum and Superchain Analytics",
    "description": "growthepie.xyz is a public goods data platform for Ethereum and its scaling solutions, providing essential metrics, onchain data, and educational resources to empower developers and users in making informed decisions.\n\nIt aims to enhance transparency and understanding within the Ethereum ecosystem. It is entirely free to use, with no subscription fees or access limitations, funded primarily through grants and user donations. Key features include fundamental metrics and blockspace exploration, offering insights into chains' and their projects’ activity, value locked, economics, and Data Availability metrics. Our most recent addition are application-specific analytics. We have most of the Superchain covered, constantly adding more along the way. \n\ngrowthepie has been built from zero all in-house with a team of 8 people, with early funding from the Ethereum Foundation, Optimism grants and RPGF as well as Gitcoin and Octant rounds."
  },
  {
    "name": "Gelato Automate SDK",
    "description": "Automate your smart contracts using Automate SDK"
  },
  {
    "name": "JiffyScan",
    "description": "4337 Block Explorer"
  },
  {
    "name": "Stepan's project",
    "description": "Ignore this project -- I'm not actually applying for funding. This project was created to run E2E test on OP-Atlas"
  },
  {
    "name": "Farcaster Attestation",
    "description": "Farcaster Attestation is bringing Farcaster wallet verification on-chain to the Optimism Mainnet. Traditionally, Farcaster wallet verification data is only accessible through the Farcaster Hub, which cannot be utilized directly on Optimism Mainnet via Solidity smart contracts. This creates a centralization issue in the Retro Funding EAS schema, limiting the authorized attester to a single wallet, as it requires verification from a centralized backend.\n\nFarcaster Attestation resolves this centralization problem by enabling anyone to attest their Farcaster data permissionlessly.\n\nWe have replicated the Retro Funding Project and Metadata Schema to test the integration with Farcaster Attestation. For more information, refer to the Links section."
  },
  {
    "name": "Variance_dart",
    "description": "👨🏻‍🍳 What is Variance dart\nVariance dart is a comprehensive developer sdk written completely in dart lang to enable Ethereum interactions while implementing the new and improved Ethereum user experience (Account abstraction). With Variance, you can perform and bundle useroperations for all transaction within your Flutter app seamlessly. \nFurthermore, Variance dart supports different kind of accounts:\n\n✅ Safe Passkeys Accounts\n✅ Alchemy Light accounts\n✅ Safe smart accounts\n\nThe Variance sdk is bundler agnostic, as you can use whatever bundler bests fit your solution. \n\n\n🧑🏽‍🍳 What is Web3_signer\nThe signer package was created as companion to help sign transactions, supporting EIP-1271 message signing with multiple authentication methods (passkeys, HD wallets, private keys). According to stats from pub.dev, we process over 200+ signatures weekly.\n\n👨🏽‍💻 Developer Adoption\nAchieved 13+ GitHub stars 🌟 and 5+ forks ⫚ across repositories, with an active contributors.\n\n🫱🏾‍🫲🏽 Partnerships\nVoltage Finance (Fuseio) Integration: Powered account abstraction for their new decentralized wallet, enabling 50,000+ users  to perform gasless transactions.\n\nLearnWay implemented education-focused blockchain tools serving 2000+ students 🧑🏼‍🎓 and gamers eliminating gas fees for 4 key educational interactions:\n\n✅Claim sign-in bonuses \n✅Start/join quiz sessions \n✅Award distributions"
  },
  {
    "name": "Usecase Generator",
    "description": "Privacy idea generator to generate ideas curated by the Web3Privacy Now community and experts."
  },
  {
    "name": "Callthis",
    "description": "Callthis is a better transaction builder:\n- Generate an interface for any contract, even if it's unverified. (Powered by WhatsABI, which I also created)\n- Build a transaction and save it as a link that can be shared and executed later.\n- Works with any EVM chain, with WalletConnect or Safe Wallets or browser-injected providers.\n- Address fields automatically resolved with ENS.\n- Supports complex contract inputs with tuples, arrays, etc.\n- No backend services required, grab the source and run it locally for privacy and censorship-resistance!\n- Permissively licensed under MIT, use it in your products.\n\nAbout the author: I am a long-time open source builder and Ethereum ecosystem contributor, my other project WhatsABI is also listed on Atlas.\n\nAbout the users: Callthis is useful for developers and users alike. It's handy to setup calls to contracts beyond what the official frontend supports. Based on support requests and conversations with users of Callthis, it is particularly popular on newer and more volatile rollups where there is not yet a strong culture of longevity like there is on Mainnet Ethereum. People often get their funds \"trapped\" in a contract whose frontend disappeared and not verified on Etherscan, so they can't use Etherscan's contract explorer, and they find Callthis to help them build a transaction to rescue their funds."
  },
  {
    "name": "Ladders.Vision",
    "description": "View any NFT on the Superchain in the most decentralized way."
  },
  {
    "name": "Verifereum",
    "description": "Verifereum is an open-source project bringing mathematical rigor to Ethereum smart contract verification using the HOL4 theorem prover. The project is building tools to prove the correctness of smart contracts and eliminate entire classes of vulnerabilities. With billions of dollars secured by smart contracts, Verifereum aims to provide the strongest formal verification security guarantees possible for the Ethereum ecosystem."
  },
  {
    "name": "GDWeb3",
    "description": "GDWeb3 is a GDScript library for interacting with blockchain networks(The first support is Optimism). It will provide Web3 game developers with a powerful game development engine. For game developers in the Godot ecosystem, it will offer an SDK for developing blockchain games."
  },
  {
    "name": "Crawling the Ethereum P2P network with Nebula",
    "description": "The ProbeLab team has developed advanced crawl tooling to gather important information on the structure of Ethereum's P2P network. The results are published weekly on Mondays at: https://probelab.io and report results for the previous week. The primary tool used to extract these results is the well-known and widely-used Nebula crawler."
  },
  {
    "name": "Voltaire | Account Abstraction Bundler",
    "description": "Voltaire Bundler is a core infrastructure component for Ethereum Account Abstraction designed to extend Ethereum nodes. It facilitates the inclusion of smart account transactions — known as UserOperations —via an alternative peer-to-peer mempool, without requiring any protocol changes. Voltaire is relied in production by Smart Wallets pushing new grounds for Ethereum UX like JOIN, BackPack, El-Dorado, Unit-e, Morpher and and many others. Voltaire is built and maintained by Candide, a small independent team that has been redefining Ethereum user experiences since 2022."
  },
  {
    "name": "BASE BTC EARTH 🌍",
    "description": "Hello, I am a designer. I am an artificial intelligence designer. I am 25 years old. I'm from Turkey. I need some support. I want to do more for Optimisim. I don't know much about Github. But everything I did here is as you want. I increased the on-chain activity and interacted with 420 wallets. https://element.market/collections/base-btc-earth"
  },
  {
    "name": "Dmail Network",
    "description": "Stay Informed and Connected with Intelligent and Secure Messaging & Notifications.\n\nDmail Network is an AI-powered decentralized communication infrastructure built to provide encrypted emails, unified notifications, and targeted marketing across multiple chains and dApps for users, developers, marketers and influencers."
  },
  {
    "name": "DexKit",
    "description": "DexAppBuilder provides a comprehensive kit of no-code/low-code tools and solutions, enabling anyone to easily create customized DApps for Web3."
  },
  {
    "name": "Diffuse Data Feeds",
    "description": "Diffuse's Price Feed Oracles offer a next-generation solution for accessing real-time, verifiable pricing data on any EVM-compatible L1 or L2 blockchain. \n\nBuilt on Diffuse's zkServerless protocol, this product redefines how price data is delivered by ensuring high-speed, trustless, and cryptographically secure updates for decentralized finance (DeFi) applications and beyond."
  },
  {
    "name": "AWS KMS and YubiHSM signer for OP Stack",
    "description": "We have developed a signer proxy software that enables the OP Stack chain to use an external signer (currently supporting AWS KMS and YubiHSM) through the official signer client to signer the sequencer, batcher, proposer and challenger transactions. However, the official signer client does not integrate with external signers, so we have implemented this functionality in our signer proxy.\n\nCurrently, the process outlined in the Optimism documentation for setting up a sequencer, batcher, and proposer requires using plain private keys, creating an insecure environment for mainnet deployment. Although the documentation suggests using hardware security modules (HSMs) for key management, it lacks detailed guidance beyond referencing source code. Chain operators, particularly those using bare metal setups, often prefer YubiHSM2 over cloud-based solutions like AWS KMS due to its hardware-native security.\n\nTo enhance security, mainnet chain operators are encouraged to use industry-standard hardware signers like YubiHSM2 or AWS KMS. This approach allows operators to deploy Optimism stack chains securely by protecting private keys with hardware-based solutions. Existing resources, such as the integration of YubiHSM2 into the Keplr wallet and the TMKMS YubiHSM installer, provide relevant experiences that support this approach.\n\nOur AWS KMS Signer proxy has been used by the Lisk team for their op-challenger. We are working with them to make signer proxy perfect and production ready."
  },
  {
    "name": "OmniHub",
    "description": "OmniHub NFT launchpad invites you to explore the boundless realms of creativity. Create your own collection in just a few clicks. This is where the future of art is born.\n\nOmniHub is a universal platform that empowers creators, artists, and entrepreneurs to launch and manage their NFT collections. With user-friendly tools and multi-network support, OmniHub simplifies the process of exploring, developing, and showcasing unique digital assets in the evolving NFT space."
  },
  {
    "name": "Opstack Kit",
    "description": "Bridging hooks for OP Stack Chains\nnpm i opstack-kit | is a toolkit for all upgrades. To easily connect and interact with the OP-Stack (Superchain)\n\n📝 - Focus on Your Dapp\nEffortlessly create awesome OP-Stack (Superchain) sites with just npm i opstack-kit.\n\n🧑‍💻 - Enjoy the \"opstack-kit\"\nInstant server start, lightning fast hot updates, and leverage OP-Stack (Superchain) ecosystem.\n\n⚙️ - Customize with OP-Stack\nUse syntax and components directly in \"opstack-kit\", or build custom themes.\n\n🚀 - Ship Fast Sites\nStart creating quickly \"opstack-kit\" after that deploy it to your network.\n\nFeatures\n- Simplifies cross L1 & L2 interactions\n- Supports \"CustomGasToken\" deposit & withdrawal functions\n- Supports multi-functionality & new fault-proof feature\n- CLI command development tools (prove, finalize)"
  },
  {
    "name": "Redprint",
    "description": "Redprint toolkit, is a toolchain and knowledge hub to improve OPStack accessibility, tailored for developer. It includes:\n\n1) Redprint wizard: It is a code generator/ interactive playground to debug/modify OPStack ’s codebase.  It supports a space to experience, and build features which aren't yet available on the production at all, empowering developers to tinker, and push the boundaries of what's possible by composing their own different OPStack components together. \n\n2) redprint-forge: It is a developer-friendly framework/library in solidity to deploy OPStack ’s contracts in a modular style. It supports type-safe smart contract deployment, re-usable testing pipeline, all-Solidity-based ( no context switching), and tx Management via Safe Smart Contract Deploy Script"
  },
  {
    "name": "UTP Java Library",
    "description": "A non-blocking UTP library in Java that avoids defining the transportation layer. Ready to be used using UDP or discv5. "
  },
  {
    "name": "Zabi",
    "description": "Zabi is a project for interacting with ethereum and the superchain written in Zig"
  },
  {
    "name": "Mobile Wallet Protocol in Unity",
    "description": "MWP is a protocol to allow unity games to interact with wallet apps and access users' web3 accounts. It creates a direct channel between client and wallet apps, removing the need for an intermediary bridge or relay server."
  },
  {
    "name": "Explorer",
    "description": "Explorer is a flagship project by Web3Privacy Now that curates and maintains an extensive open-source database of privacy-enhancing tools, use cases, and research. Designed as a public good, it empowers individuals, developers, and organizations to navigate the privacy landscape with greater knowledge and autonomy. Explorer bridges the gap between users and privacy solutions by providing accessible, actionable, and up-to-date resources to foster a culture of privacy within the Web3 ecosystem."
  },
  {
    "name": "Web3 Hackers Collective",
    "description": "The Web3 Hackers Collective (W3HC) is a DAO created on February 24, 2023. It is deployed to Optimism. \n\nOur mission statement is:\n\n\"We want to build integrations through mentoring and learning.\"\n\nInstead of reinventing the wheel from hackathons to hackathons, our approach is to identify relevant Web3 integrations to achieve, and to seize these opportunities to do as much mentoring as possible.\n\nAny proposal submitted to the DAO should meet one of the following criteria:\n\n- Organize local hackathons, workshops and meetups\n- Request retroactive funding for a successful integration\n- Develop and maintain Gov: a DAO framework built with Governor and NFTs\n- Help people to setup their own DAO\n\nWe're a team of four (Theo, Bertrand, Olivier and Julien), we developed several projects including: \n\n- Gov: DAOs for everyday people. A DAO framework built with Governor and NFTs. https://github.com/w3hc/gov\n- Pattini: a GitHub Action designed to incentivise and reward contributors of a GitHub project. When an issue is merged by a maintainer, the pull request author automatically receives a certain amount of ERC-20 (USDC, DAI, ...). https://github.com/w3hc/pattini\n- Web3DD: a classic file explorer to manage your files and directories in a safe and decentralized fashion. https://github.com/w3hc/web3dd\n- Genji: a Next.js Web3 app template. https://github.com/w3hc/genji\n- w3hc-hardhat-template: a Hardhat template that includes Typescript, Ethers v6, OpenZeppelin Contracts v5.0.2, Hardhat Verify plugin, Hardhat Deploy plugin. https://github.com/w3hc/w3hc-hardhat-template"
  },
  {
    "name": "FrameMaker",
    "description": "FrameMaker - Tilda in the frames world of Warpcast. Our goal is to make it easy to create frames for users who don't know coding.\n\nFrameMaker allows you to create frames to delegate votes in the Optimism chain, making it easy to attract delegates, participate in governance, and significantly increase audience engagement in the ecosystem.\n\nOur project was created by active top 100 delegates (https://vote.optimism.io/delegates/0x03dde7b6c372bc6c748ae1af65497b74a70492fa) and Optimism ecosystem ambassadors. \n\n*More than 600 people have already created over 1,500 frames."
  },
  {
    "name": "deBridge",
    "description": "deBridge is DeFi's internet of liquidity, enabling real-time movement of assets and information across the DeFi landscape. Without the bottlenecks and risks of liquidity pools, deBridge can power all type of cross-chain interactions with deep liquidity, tight spreads, and guaranteed rates."
  },
  {
    "name": "Unruggable ",
    "description": "Unruggable is focused on building the next generation of blockchain-based naming services. Our mission is to create secure and user-friendly solutions that enable projects and Layer 2 networks to establish their own naming systems using the Ethereum Name Service (ENS). As part of our commitment to open-source software development, we provide essential infrastructure that allows everyone to benefit from the scaling of ENS and L2 blockchains:\n\n'Unruggable Gateways' is an open source codebase that implements a complete solution for fetching proofs of data from rollup chains and verifying that data on Layer 1 Ethereum. We operate our own gateways using the codebase and are committed to supporting the trustless resolution of ENS names."
  },
  {
    "name": "Air3",
    "description": "Air3: Empowering onchain builders on Superchain.\n\nAir3 is the go to multi-chain minting platform for onchain builders. \n\nOur team is dedicated to providing a powerful, user-friendly platform that caters to the needs of builders, creators, artists, and brands at scale.\n\nWe've just launched v2 on Superchain, and while NFT drops aren't available yet, get ready for v3. \nThis complete redesign will revolutionize how you build and share your ideas with the Superchain NFT community.\n\nThe future of on-chain is Superchain, and Air3 is your gateway to success. #superchain "
  },
  {
    "name": "Pipegate",
    "description": "Pipegate is a new spec for monetization and authentication built for stablecoin-powered APIs. It replaces traditional API keys with cryptography and payment streams, enabling devs to accept stablecoin payments for their APIs with zero fees and no API keys. It aims to solve the mess of API key management and the high costs of payment gateways, all using crypto rails. \nIt’s a simple middleware that can be configured and added to your codebase in just 3–4 steps, no need to interact with any platform.\n\nI'm a web3-native engineer passionate about blockchain, cryptography, and builder at heart. Over the past 3 years, I’ve worked on several experimental projects and have been a 3-time ETHGlobal finalist. I’ve been building Pipegate in public for the past 4 months, and I believe it ha to potential to be the much-needed upgrade for how we handle auth and monetization."
  },
  {
    "name": "Solarity",
    "description": "Solidity-Oriented Development Tooling"
  },
  {
    "name": "Token Historical Balance",
    "description": "The OP Token Historical Balance is a critical tool developed by WakeUp Labs that improves the usability and functionality of the Optimism blockchain. This service empowers developers, analysts, and users by enabling them to query historical blockchain data at any specific moment in time. It supports queries for any public view function of smart contracts deployed on Optimism, from the very first block to the present. By providing access to historical state data, this project directly supports transparency, research, and analytics, which are crucial for the evolution and understanding of the Optimism ecosystem.\n\nOur project contributes to the OP Stack Tooling category by providing a fundamental utility that facilitates better decision-making, auditing, and research within the Optimism network. This tool is vital for developers who require accurate historical data to test, validate, and optimize their applications. Additionally, it promotes the growth of the Optimism ecosystem by reducing barriers to entry and fostering a more robust environment for innovation.\n\nWakeUp Labs is dedicated to advancing the capabilities of Ethereum's Layer 2 solutions, and we believe that tools like the OP Token Historical Balance are essential for driving adoption and enhancing the overall developer experience. By making Optimism's blockchain data more accessible and usable, we aim to empower the community and fuel the next wave of development on the OP Stack."
  },
  {
    "name": "ethereum-abi-types-generator",
    "description": "Generate typings based on your ABIs, with provider wrappers exposed."
  },
  {
    "name": "Bonadocs ",
    "description": "Bonadocs allows web3 engineering teams to collaborate and build applications in a very intuitive way. To simplify integrations, we've categorized our tooling as follows:\n\nDocgen: Docgen allows developers to go from their codebase to beautiful and interactive documentation in seconds. Using our hardhat plugin, you can generate interactive documentation to query your contract methods.\n\nWidget: Through our playground environment, you can generate widgets for your contract methods. These widgets can then be easily embedded in your docs or any react application for devs to query. This is instrumental for devrel teams, to help onboard external devs.\n\nPlayground: Our playground is a collaborative environment primarily for solidity and front-end devs to build applications. This can be used by internal engineering teams or teams across different organizations. Devrel teams can also take advantage of the playground to create a single source of truth for their protocol - making onboarding super easy for their developer community.\n\nProtocol Registry: Our protocol registry is an open-source tool that allows you to find different popular protocols and their respective playgrounds.\n\nOn a high level, bonadocs are created to simplify the documentation, interaction, and integration of smart contracts - similar to Postman and web APIs.\n\nTry it out: https://docs.bonadocs.com/\nPlayground demo: https://x.com/thisdavidboy/status/1854809292836339939"
  },
  {
    "name": "Save/nx",
    "description": "Let's improve the navigation system"
  },
  {
    "name": "Test 2",
    "description": "lalala"
  },
  {
    "name": "Engagement.Vision",
    "description": "View user engagement within different communities."
  },
  {
    "name": "viem-tracer",
    "description": "Debug transactions via traces by automatically decoding them with the help of openchain.xyz!\n\n- Automatically append traces to error messages of failed eth_estimateGas and eth_sendTransaction RPC requests.\n- Add support for debug_traceCall to a Viem client with correct types!"
  },
  {
    "name": "Patterns wallet analytics & CRM",
    "description": "Free public web3 CRM and wallet analytics for OP builders. Helping OP dApps & DeFis discover most valuable user groups and counteract sybils. Part of the Optimism Superchain 4337 Data Standards group."
  },
  {
    "name": "TurtleShell",
    "description": "One day you wake up and your protocol got exploited …maybe you heard of Circuit Breakers as attempt to end that quite real nightmare.\n\nWith TurtleShell we are aiming to give every Smart Contract holding Assets the necessary bolster to prevent unintended outflow.\n\nAvailable open-source tools include:\n- Smart Contract SDK\n- Frontend SDK, for visualizing relevant security data"
  },
  {
    "name": "Light Account",
    "description": "A set of lightweight, open sourced, audited and gas-optimized ERC-4337 compatible smart contract accounts with designated ownership"
  },
  {
    "name": "opup",
    "description": "[`opup`](https://github.com/zhiqiangxu/opup) is a one-stop installation tool for OP Stack. It has been used to deploy multiple L2 networks for Quarkchain, with the latest being available at: [Quarkchain Explorer](https://explorer.beta.testnet.l2.quarkchain.io/) ."
  },
  {
    "name": "Wild Water Bottle Cap Token",
    "description": "A tokenized Real World Asset (RWA) where the supply of the token matches the actual number of bottle caps that Jacob Homanics owns in the physical world."
  },
  {
    "name": "Clear Wallet",
    "description": "Clear EVM wallet is a fully open-source EVM browser wallet based on Ethers, Ionic, Manifest V3, and Vue. It implements Metamask API and will work as a replacement for Metamask, websites will detect it as Metamask, so select Metamask when interacting with Dapps. Websites that implement EIP-6963 will detect it as Clear EVM Wallet.\n\nIt has been public on Chrome Store since August 2022."
  },
  {
    "name": "Charged Particles - Web3 Packs",
    "description": "Charged Particles the composability protocol is officially live with our latest product \"Web3 Packs\", a one click tool that allows users to buy a series of curated token packs in a batch transaction and then immediately nests them inside a non-custodial NFT. Launched on the Mode Blockchain."
  },
  {
    "name": "Solodit",
    "description": "What is it?\nSolodit is an open-source, community-driven platform dedicated to improving web3 security. It aggregates over 8,000 smart contract vulnerability reports, bug bounty opportunities, and security audits from top firms like Cyfrin, OpenZeppelin and Trail of Bits, alongside contributions from individual researchers. Solodit not only aggregates this information but also makes it actionable, equipping developers and auditors with tools to prevent exploits and enhance the safety of dapps.\n\nWhy is it needed?\nThe web3 ecosystem is plagued by billions of dollars in losses due to security breaches in smart contracts and protocols. Despite the availability of security knowledge, it is fragmented across various platforms and reports, making it inaccessible to most developers and security teams. There are several problems that Solodit solves:\n\nKnowledge Gap: Many teams deploy smart contracts without understanding past vulnerabilities, leading to repeat incidents.\nInefficiencies: Developers and auditors spend valuable time searching disparate sources for security insights.\nEconomic Impact: Preventable exploits undermine trust in web3, stalling adoption and investment.\n\nBy aggregating and structuring security data, Solodit enables proactive vulnerability management and risk mitigation in the Web3 ecosystem.\n\nHow is it unique?\nComprehensive Coverage: Aggregates findings from leading auditors and platforms, offering unmatched insights into vulnerabilities and bug bounties.\nActionable Insights: Goes beyond archiving reports by providing advanced search tools and tagging systems to contextualise risks and solutions.\nCommunity-Driven Enhancements: Facilitates collaboration via ratings, tagging, and leaderboards that recognise top contributors, fostering a thriving security community.\nEducational Resource: This site serves as a learning hub for developers and auditors, providing real-world case studies on blockchain security.\n\nSolodit is a multipurpose tool designed to:\nMitigate Risk: Helps developers avoid known vulnerabilities, reducing the likelihood of exploits.\nPromote Proactive Security: Enables protocols to adopt preventive measures by studying historical vulnerabilities.\nStreamline Bug Bounties: Simplifies participation in bounty programs, encouraging more ethical hackers to contribute to ecosystem security.\nFoster Skill Development: Supports auditors in honing their skills and staying updated on emerging threats.\nSupport Decision-Making: Assists protocols in evaluating auditors via its leaderboard, promoting accountability and quality audits.\n\nWho is it for?\nDevelopers: Seeking to secure their smart contracts and understand vulnerability trends.\nAuditors: Looking to access a comprehensive repository of findings and showcase their expertise.\nWhitehat Hackers: Interested in participating in bug bounty programs and contributing to web3 security.\nProtocol P&E teams: Aiming to assess risks and prevent costly exploits.\nEducators and Researchers: Teaching or studying blockchain security with real-world examples, e.g. Cyfrin Updraft. \n\nStill to come:\nUI/UX redesign\nPower Aderyn, static analysis support"
  },
  {
    "name": "Stereum L2 Optimism Integration",
    "description": "Stereum  is dedicated to advancing Ethereum through open-source and open development. Our commitment lies in reducing technical barriers, supporting decentralization, and enhancing security within the Ethereum(EVM) ecosystem.\nWe integrated Optimism as an Integration into our Node Setup and Maintenance Gui based tool. Everybody is now able to spin up an Optimism node connected to a Ethereum node within minutes. Enabling low infratech people to access multilayer architectures completly by themselves, decentralized, 100% free, 100% untracked, 100% auto updated. \nAfter everytthing is synced you now are able to access \n1)your own RPC endpoint \n2)your onw data api \n3) your own websockets \nboth Ethereum and Opitimism. \nAs we would love to integrate further Optimistic rollups into our software we would be honoured and feel apreaciated if you would grant us a grant "
  },
  {
    "name": "ABIExplorer",
    "description": "I'm Collins Hillary and I’m excited to share a tool we’ve been working on: ABI Explorer.\n\nABI Explorer is like Postman for smart contracts; it allows developers and integrators to test and interact with smart contract functions directly using their ABIs. No need to write custom scripts or spin up a front end, just drop in your ABI, connect your wallet, and start calling functions.\n\nIt’s designed to make life easier for anyone working with smart contracts and also to:\n\nQuickly test read/write functions\n\nSimulate interactions before integrating into your dApp\n\nDebug contract behaviors on any chain, including Optimism\n\n\nWe built this to help streamline contract integration and testing workflows, especially for devs building with on-chain components."
  },
  {
    "name": "solizard",
    "description": "Super easy interactive shell for interacting with smart contracts"
  },
  {
    "name": "SuperSwap",
    "description": "SuperSwap is the first DEX aggregator on Ink, Kraken's Layer 2 blockchain, solving liquidity fragmentation across Ink-based DEXs. Our mission is to drive Ink adoption through seamless tools, starting with the aggregator and expanding to cross-chain swaps on the Superchain, and fiat-to-Superchain solutions."
  },
  {
    "name": "Updraft",
    "description": "What is Cyfrin Updraft?\nCyfrin Updraft is the leading blockchain development and smart contract security education platform, offering over 100+ hours of hands-on courses that enable aspiring and experienced smart contract developers to level up their skills. Designed and taught by CEO Patrick Collins alongside industry-leading educators and researchers, our platform provides high-quality, free educational content, hands-on coding experiences, and industry-recognized Cyfrin Updraft Certifications, which verify developers’ expertise in Solidity, Vyper, DeFi, and smart contract security.\n\nUpdraft has educated millions of developers globally, equipping them with the skills necessary to build secure and scalable decentralized applications. \n\nKey Metrics:\n220K+ Updraft community members\n1M+ Monthly impressions\n60K+ Monthly active developers\n15K+ Monthly new students\nTrusted by developers from top Web3 companies and protocols\n\nWhat are the Issues with the Existing Web3 Landscape?\nDespite the rapid growth of Web3, developers face several challenges:\n- Lack of accessible, high-quality education: Most resources are either too theoretical or fragmented, making it difficult for developers to gain practical experience.\n- Security vulnerabilities: Many developers lack the knowledge to build secure smart contracts, leading to exploits and hacks that result in millions in losses.\n- High entry barriers for Web2 developers: The transition from traditional development to Web3 remains complex due to unfamiliarity with blockchain infrastructure and tooling.\n- Limited developer retention: Many developers struggle to find long-term engagement opportunities within blockchain ecosystems. \n- No standardized skill validation: Without recognized certifications, it is difficult for developers to showcase their expertise, limiting their career opportunities.\n- Lack of security best practices: Without proper training and certification, developers may unknowingly introduce vulnerabilities, increasing the risk of hacks.\n\nHow Is Cyfrin Updraft Fixing the Issue?\nCyfrin Updraft addresses these challenges by providing:\n- Comprehensive blockchain development education: Covering Solidity, Vyper, Foundry, infrastructure, security best practices, and more.\n- Project-based learning: Developers gain hands-on experience by building and deploying real-world applications.\n- Security-first approach: Courses emphasize smart contract security, audit methodologies, and best practices to prevent exploits.\n- Developer tooling and ecosystem integrations: We create open-source tools and frameworks that enhance developer efficiency and security.\n- Bridging Web2 and Web3: Providing structured learning paths to onboard Web2 developers into Optimism’s ecosystem.\n- Completely free access: Updraft courses are entirely free, ensuring that any developer, regardless of financial constraints, can access high-quality education and build the skills needed to succeed in Web3.\n- Validation of Skills: Certifications provide a standardized way to verify a developer’s expertise, helping them stand out in a competitive job market.\n\nWho is Cyfrin Updraft For?\n+ Aspiring Web3 Developers - For newcomers eager to break into blockchain development, Cyfrin Updraft provides a structured and accessible learning path. Our courses start with fundamental concepts, gradually building up to advanced smart contract development, security topics, full stack development, infrastructure development and advanced DeFi dApp development . With hands-on coding exercises, real-world project deployments, and Cyfrin Updraft Certifications, aspiring developers can establish themselves in the industry, build secure and scalable dApp, and demonstrate their skills to potential employers.\n+ Experienced Web3 Engineers - For developers already working in the Web3 space, Cyfrin Updraft serves as a hub for continuous learning and skill enhancement. Advanced courses on smart contract security, DeFi mechanisms, and protocol architecture help engineers stay ahead of industry trends. Our Cyfrin Updraft Certifications validate expertise in Solidity, Vyper, and security best practices, distinguishing top engineers in a competitive job market. \n+ Web2 Developers - Traditional software engineers looking to transition into blockchain development often struggle with understanding decentralized technologies and smart contract principles. Cyfrin Updraft bridges this gap by providing a structured, Web2-friendly onboarding experience. Our courses explain blockchain fundamentals in a way that resonates with Web2 developers, drawing parallels between familiar programming concepts and smart contract development. For example, we’ve developed a Vyper Smart Contract Development course specifically to support onboarding Web2 developers, ensuring they gain hands-on experience with secure and efficient smart contract programming. This approach aligns with Updraft’s mission to scale Web3 adoption by equipping developers with the knowledge and tools they need to seamlessly transition into the decentralized ecosystem.\n+ Protocol and dApp Teams - Organizations need skilled developers who understand smart contract security, scalability, and best practices. Cyfrin Updraft helps protocol teams and dApp builders by providing a reliable pipeline of trained, certified engineers. Through Cyfrin Updraft Certifications, hiring teams can verify a candidate’s expertise, reducing onboarding time and improving the quality of development within their projects. Additionally, protocols can collaborate with Cyfrin Updraft to develop custom training programs, ensuring their developer communities are well-versed in their technology stack.\n\nWhat is the Roadmap for Cyfrin Updraft?\nQ1 2025: Courses & Foundational Expansion\n1. Launch a Full Stack Development Course\nThis course will provide a comprehensive learning experience for developers looking to build dApps from the ground up.\nThe course covers modern frontend frameworks (React, Next.js, Svelte), Web3 libraries (ethers.js, viem, wagmi), and backend infrastructure (site hosting, event indexing, caching strategies). \nDevelopers will build real-world projects, including a basic Ethereum dApp, a decentralized NFT marketplace, and an advanced DeFi interface with account abstraction.\n2. Launch Curve Cryptoswap Course\nA deep dive into the mechanics of Curve Finance’s automated market maker (AMM) designed for stablecoin swaps.\nThe course will explore the math supporting Curve Cryptoswap’s AMM, how liquidity is concentrated, and how the AMM decides to repeg the pool's liquidity at a different price.\nDevelopers will progress through AMM function calls, state variables, swapping tokens, adding and removing liquidity, and price-repegging. The learning is supported at every stage with quizzes and exercises.\n3. Launch Uniswap V3 Course\nThis course will focus on Uniswap V3’s concentrated liquidity model, fee tiers, and capital efficiency improvements.\nAn advanced DeFi developer course designed to enable developers to build Uniswap V3-based protocols\nThe course covers Uniswap V3 math and concentrated liquidity, progressing through swaps and the factory contract, the fee algorithms, and the TWAP price oracle.\n4. Launch SSCD+ (Smart Contract Security & Development) Certifications\nSSCD+ Certification is the premier certification for Solidity developers, recognized by industry-leading protocols and university organizations. This certification validates developers’ expertise in writing, testing, deploying, and troubleshooting Solidity smart contracts.\nKey skills that developers will be tested include proficiency in Solidity development, application of industry best practices, smart contract security expertise, mastery of industry-standard development tools, protocol-specific knowledge, blockchain DevOps skills\n\nQ2 2025: Advanced Security & Infrastructure Expansion\n1. Launch an Updraft Ambassador Program\nThe program will empower university students and community leaders to advocate for Web3 and Cyfrin Updraft, engage developers, host workshops and hackathons on campuses and in developer communities.\nAmbassadors will receive early access to Updraft certifications and mentorship from the Updraft team.\nThrough Updraft's ecosystem, students will gain practical experience in blockchain education, networking opportunities, and potential internships or job placements.\n2. Blockchain and Smart Contract Curriculum for Universities\nUpdraft will collaborate with top universities to integrate blockchain and smart contract development courses into academic curriculums.\nThis will include customized coursework, hands-on projects, and guest lectures from Web3 industry leaders.\nUniversities will be able to provide blockchain education at scale, helping bridge the gap between traditional computer science education and Web3 development.\n3. Launch a Jobs Board\nThe Updraft Jobs Board will connect certified developers with leading Web3 companies and protocols.\nDevelopers who complete Updraft’s courses and certifications will have access to job listings and hiring opportunities.\nEmployers will be able to filter candidates based on certifications and project experience, making the hiring process more efficient.\n4. Launch Vyper and Smart Contract Security+ Certification Program\nVyper+ Certification is a specialized certification focused on smart contract development using Vype. This program will cover Vyper syntax, best practices, contract patterns, and optimization techniques, ensuring developers can build secure and efficient Vyper-based applications.\nSmart Contract Security+ Certification is a security-focused certification that validates a developer’s ability to audit and secure smart contracts written in Solidity. This program will cover common vulnerabilities, formal verification, attack vectors, auditing methodologies, and best practices.\n\nQ3 2025: Developer Engagement & Retention\n1. Launch an Infrastructure Development Course\nThis course will focus on blockchain infrastructure, node operations, and MEV-related optimizations.\nDevelopers will learn how to build and run their own validators, set up RPC nodes, and optimize blockchain indexing. They will also gain a deep understanding of key Web3 infrastructure components, explore Layer 2 architecture, build custom L2 solutions, and evaluate infrastructure architecture trade-offs.\n2. Launch Live Cohort Learning Model\nCyfrin Updraft will introduce 8-week intensive live cohorts, where students will work through the curriculum alongside mentors, teaching assistants, and AI-driven learning support.\nEach cohort will focus on hands-on, project-based learning, ensuring participants gain practical experience building and securing Web3 applications.\nBy the end of the cohort, students will earn Updraft certifications and have portfolio-ready projects to showcase their skills.\n\nQ4 2025: Web2 to Web3 Expansion & Industry Integration\n1. Expand Integration with Enterprise Use Cases\nUpdraft will develop tailored educational programs for enterprise developers, helping businesses adopt blockchain technology.\nThis will involve customized workshops, tooling integration guides, and real-world enterprise case studies.\nThe goal is to bridge the gap between traditional Web2 development and Web3 innovation, making it easier for institutional developers to enter the space.\n"
  },
  {
    "name": "Trash NFTs",
    "description": "Trash NFTs is a project built on Base that leverages the unique properties of the ERC404 token standard. We had the idea for Trash NFTs as a way to combine artichokelord’s incredible artwork with novel tech to create something fun that pushed the boundaries of what’s possible for a memecoin. We chose to build Trash NFTs on Base because we believe in the future of the Superchain and the supportive community of builders it fosters.\n\nBetween the two contracts associated with Trash NFTs, the project has generated over 1300 onchain transactions.\n\nDemo video: https://youtu.be/KORe_xnJx1w?si=6V52TlkOfLz3hySz\nVideo of artichokelord drawing the art: https://warpcast.com/trashnfts/0xc65d2a4e\n\nERC404 is an experimental token standard pioneered by Pandora on February 2, 2024. ERC404 tokens embrace characteristics of both ERC20 and ERC721 tokens: They are “semi-fungible,” enabling both highly liquid markets and uniqueness within a single asset. This allows collectors to sell their tokens when they want and in pieces, if they’d like, as well as introduces the ability to reroll your NFT traits by making more transactions. ERC404s are inherently fractionalized and designed to work natively with existing DeFi protocols. While innovative, it’s important to note that ERC404 is also experimental.\n\nWhen we first launched $TRASH, we forked Pandora’s contract and raced to be one of the first, if not the first project to deploy an ERC404 on Base. Pandora’s contract was limited to 5 variations of artwork, images that implied a reveal down the line, so we followed suit with 5 closed-lid NFTs of different rarities. Our next goal was to have a PFP collection with the lids removed, so we came up with the idea to create a new contract where you could stash your $TRASH and mint a Dumpster Diver. This contract is named The Dumpster. It is open source and available to any other ERC404 token that wishes to fork it to enable their holders to redeem their ERC404 token for an ERC721.\n\nIn addition to the ability to mint an ERC721 by depositing an ERC404, the Dumpster contract enables holders of Dumpster Divers PFP tokens to burn their ERC721 to redeem the original ERC404 that the ERC721 was minted with (retaining the rarity and token ID). A small cleaning fee (0.00042069 ETH, updatable by governance) is charged, and this mechanism can also be used for regenerating/rerolling or ‘recycling’, Dumpster Diver PFPs to get the desired traits.\n\nWe have grown to 185 holders and have generated $44k from trade fees (50% of which is $TRASH and 100% of which is reinvested in providing liquidity for our pools), and 1,654,148 DEGEN (~$40k) from liquidity mining rewards. We were also a finalist in the Backdrop Build V3 Accelerator Program (top 5% of applicants). \n\nTrash NFTs have built an effective machine: by owning the LPs that facilitate the swaps into $TRASH we capture 1% of the volume and store that in our treasury. We have two liquidity pools: 1) TRASH/ETH and 2) TRASH/ DEGEN, the rapidly growing meme token with utility in the Farcaster network and beyond. This exposes Trash NFTs to volatility, which generates more revenue because arbitrage bots stabilize the price across pools. \n\nTrash NFTs is also governed by a DAO called Waste Management that was initially allocated 20% of all $TRASH tokens. This DAO collects the cleaning fees associated with trait rerolls as well as the transaction fees and LP rewards from its DeFi activities. Finally, Trash NFTs has entered the meatspace by hosting a trash pickup event during Farcon 2024 with /humankind. \n\nWe are proud of Trash NFTs, as it has maintained and proven to be a sound investment for its holder base while operating successfully. There are definite improvements we continue working toward: 1) expanding growth efforts to the broader 404 ecosystem with partnerships (such as Scattering.io with which we have built a relationship) and promotion, 2) revamping The Dumpster website for a more seamless experience and 3) engaging the community to take leadership in expanding the DAO."
  },
  {
    "name": "All Weather Protocol",
    "description": "# We're the S&P 500 of Web3 - A Web3 Index Platform\n\n## For retail investors unsure what to invest in, we offer a simple, few-click solution to access the entire Web3 market with S&P 500-like stability and higher returns.\n\nAll Weather Protocol (AWP) is a Web3 index platform that simplifies portfolio management, allowing you to diversify your crypto assets and earn steady returns with just a few clicks. Leveraging Ethereum's latest Account Abstraction Wallet (AA Wallet) technology, AWP can:\n   * Automatically diversify your portfolio across multiple Web3 assets and yield strategies on different chains, reducing the risk of over-reliance on any single asset while achieving historically stable returns of 20~25% APY.\n   * Unlike traditional index platforms that custody your assets in their own contracts, AWP completes the entire index construction process and yield collection directly within your own AA wallet, allowing you to maintain full ownership without unnecessary third-party custody risks.\nDiversify your crypto portfolio today! Don't let the complexities of Web3 investing stand in the way of your financial freedom. Your Web3 S&P500!\n"
  },
  {
    "name": "Titan Layer",
    "description": "Introduction-\n\nThe exponential growth of blockchain networks has led to a fragmented ecosystem, with limited interoperability between chains. Users and developers face significant challenges when transferring assets or deploying contracts across multiple chains. Titan Layer addresses these issues by offering an easy-to-use, secure, and scalable platform that fosters cross-chain connectivity. With a focus on user experience and interoperability, Titan Layer aims to drive blockchain adoption and foster activity across networks.\n\nChallenges in Cross-Chain Interoperability\n\nFragmented Ecosystem: Users must navigate multiple wallets and bridges, leading to complexity and errors.\n\nSecurity Risks: Many existing bridges are vulnerable to hacks and exploits.\n\nScalability Issues: High gas fees and slow transaction times hinder seamless cross-chain transactions.\n\nLimited User Experience: Current solutions are often technical and unfriendly to non-technical users.\n\n\nTitan Layer's Solution-\n\nTitan Layer solves these challenges by:\n\nSimplified Bridging: A one-stop solution for transferring assets across chains with minimal steps.\n\nContract Deployer: An intuitive tool that allows users to easily deploy and interact with contracts across multiple chains.\n\nHyperlane Integration: We leverage Hyperlane for secure, decentralized ERC20 token bridging.\n\nUser-Centric Design: A streamlined user interface designed to cater to both beginners and advanced users.\n\n\nKey Features-\n\nMulti-Chain Support: Titan Layer supports major networks such as Arbitrum, Optimism, Polygon, Base, BSC, and Mantle.\n\nCustomizable Connectivity: Users can choose which chains to connect for a tailored experience.\n\nSecurity First: Robust security measures, including audits and encryption, to protect users' assets.\n\nEasy Deployment: One-click smart contract deployment across multiple chains, reducing technical barriers.\n\nReal-Time Monitoring: Dashboard for tracking transactions, bridging status, and contract interactions.\n\n\nUse Cases-\n\nDevelopers: Effortlessly deploy and interact with contracts across multiple chains.\n\nTraders: Seamlessly transfer assets across chains to capitalize on arbitrage or market opportunities.\n\nProjects: Launch multi-chain dApps with ease, expanding their reach and user base."
  },
  {
    "name": "OnChainGM",
    "description": "OnChainGM is a multi-chain Web3 social experience that allows users to send daily GM transactions on-chain and deploy their own smart contracts across 100+ networks, including Optimism. Our mission is to make on-chain interactions a daily ritual while simplifying contract deployment for everyone in the ecosystem."
  },
  {
    "name": "Zink Language",
    "description": "Rustic programming language that targets EVM"
  },
  {
    "name": "Web3GPT",
    "description": "Web3GPT: Simplifying Smart Contract Development with AI\n\nWeb3GPT is an AI-driven platform that makes smart contract development more approachable by enabling developers of all skill levels to write, deploy, and verify smart contracts across multiple EVM networks using natural language prompts—eliminating the need for complex configurations or integrated development environments (IDEs).\n\nKey Features:\n- IPFS Integration: For every Solidity project, Web3GPT automatically creates an IPFS repository and ensures persistent storage by pinning it with Pinata, enhancing the accessibility and decentralization of your projects.​\n\n- Contract Verification: All deployed contracts are automatically verified on Blockscout, streamlining the verification process and boosting trust and transparency in your deployments.​\n\nCustomizable AI Agents: Developers can build and utilize custom AI Agents tailored for specific functionalities, such as:​\n\nOpenZeppelin Agent: Helps to integrate OpenZeppelin's secure and community-vetted smart contract libraries, promoting best practices in contract development.​\nTokenScript Agent: Helps to integrate the TokenScript standard, deploying XML to IPFS + TokenScript Solidity contracts.\nUnstoppable Domains Agent: Agent for domain lookup and resolution using Unstoppable Domains SDK."
  },
  {
    "name": "simple-uniswap-sdk",
    "description": "Uniswap SDK which handles the routes automatically for you, changes in trade quotes reactive subscriptions, exposure to formatted easy to understand information, bringing back the best trade quotes automatically, generating transactions for you and much more."
  },
  {
    "name": "Chain Abstraction with 4337",
    "description": "With this setup, ecosystems can deploy tailor-made 4337 chain abstraction infrastructure. They become Liquidity Providers (LPs) for their users, sharing with them the value that would otherwise have been captured by solvers/fillers. "
  },
  {
    "name": "EIP.Tools",
    "description": "Explore all EIPs, ERCs, RIPs and CAIPs at one place! Even indexes the EIPs in WIP status that have PRs open.\n\n- Search Functionality against all Improvement Proposals by No. or Title\n- EIP_GPT to summarize & get a gist of each Proposal\n- 3D Graph to visualize the interconnected nature of all the EIPs/ERCs\n- See Trending EIPs on the homepage\n- Bookmark and share your list of Improvement Proposals with others\n- EIP of the Day: learn about a random EIP/ERC each day"
  },
  {
    "name": "Solidity (Wake)",
    "description": "Ackee is trusted by top-tier organizations in web3. Our mission is to contribute to a stronger blockchain ecosystem by providing security services, tooling and education."
  },
  {
    "name": "executooor",
    "description": "Ethereum's environment evolves fast. So fast that you can't keep up writing and deploying a new contract everytime you want to do something atomically onchain (not mentioning you also have to approve this freshly deployed contract to spend your favorite ERC20/ERC721!).\n\nWelcome the Executor contract:\n\nCalculate whatever you need to submit your execution\nChain calls / delegatecalls as needed to execute whatever you want to execute atomically onchain (using viem and/or ethers-v6!)\nOptionally prepend any ERC20/ERC721 approval via a third-party bundling service (such as Flashbots)\nSubmit your execution transaction (or bundle)\nFor MEV out there: tip the bundler\nYou can even atomically populate your chain of calls if it depends on some state change! For example, you can skim ERC20 tokens after an execution by simply requesting the balance left onchain and replacing it in the onchain call."
  },
  {
    "name": "Tachyon",
    "description": "Rath's Tachyon is a high-speed, low-latency relayer and bundler supporting EOA and AA transactions."
  },
  {
    "name": "Passport XYZ | Gitcoin Passport",
    "description": "Passport is the premier web3 native offering that enables ecosystems to protect, understand and organically grow what matters most – their communities. We see Passport at the confluence of a best in class identity solution, backed by the most relevant and comprehensive data analysis toolset that also offers communities the ability to ascribe reputation. "
  },
  {
    "name": "Privacy Builder Pack",
    "description": "Hacker Manuals & Privacy Guidelines to help the builders deliver practical privacy-enhancing projects, turn them into products, & scale being sustainable."
  },
  {
    "name": "Decent.xyz",
    "description": "Decent enables cross-chain swaps and 1-click transactions with any token across chains. "
  },
  {
    "name": "Blockflow",
    "description": "Blockflow equips devs with the data and API tools to build innovative products faster. Unlike traditional solutions like RPCs and other Data Providers, Blockflow enables you to build \"Serverless Backends\", streamlining your operations without the heavy infrastructure, and saving 70% time & resources in building & 100% in maintenance."
  },
  {
    "name": "WAGMI",
    "description": "WAGMI is a memecoin launchpad, designed for both Traders and Creators. Now everyone has a chance to effortlessly create and trade memecoins securely.\n\nOne-click creation, seamless trading, and endless fun await with WAGMI:\n• Create your memecoin just for $1\n• Get support from WAGMI community \n• Trade, analyze & chat in one place\n• Receive rewards being Trader or Creator\n• Safe trading with UNCX LP locks and OpenZeppelin smart contracts"
  },
  {
    "name": "ethdebug",
    "description": "Debugging deployed smart contracts today relies on guesswork. No EVM-language compiler emits enough structured debug data. As a result, debuggers must reverse-engineer arcane details of high-level language internals—a brittle, inaccurate, and hard-to-maintain process. This slows development, impedes audits, and obscures contract behavior.\n\nThe ethdebug format is a proposed standard for debugging metadata. It’s language-agnostic, tool-friendly, and designed to map EVM execution back to source locations, control flow, data structures, and developer intent. The goal is to enable reliable debugging of deployed contracts—without requiring compiler internals or custom builds.\n\nThe format is still in development. Implementations are currently underway in solc and in multiple existing debuggers. The focus is on interoperability, minimal overhead, and incremental adoption.\n\nethdebug is part of the Argot Collective, a new organization spinning out from the Ethereum Foundation. Argot's other projects include Act, hevm, Fe, Sourcify, and Solidity.\n\nThis work directly supports Optimism’s mission to fund shared public infrastructure. A common debugging standard makes smart contracts easier to understand, audit, and build on—across chains, languages, and tools."
  },
  {
    "name": "Superfluid ",
    "description": "Superfluid RETROPGF BADGEHOLDER ,RETRO FUNDING PROJECT, opRetro"
  },
  {
    "name": "LlamaPay",
    "description": "Automate & stream salaries by the second"
  },
  {
    "name": "miniapp starters",
    "description": "miniapp starters is a set of open-source starter templates designed to make it easier to build Farcaster miniapps, with support for Worldcoin integrations as well.\n\nMiniapp Starters came out of our own journey building miniapps. Along the way, we found ourselves creating common patterns and components repeatedly, so we decided to turn that work into a set of reusable, community-friendly templates. Now, anyone can kickstart their own miniapp projects without reinventing the wheel."
  },
  {
    "name": "L2Pass",
    "description": "Cross-Chain Super-App for effortless Multi-Chain Token Movement, Swaps and Art Performance. Powered by Layer.Zero."
  },
  {
    "name": "BAG Guild Dapp",
    "description": "BAG Guild DApp is the official decentralized application of Based Arabian Guild (BAG), designed as the central hub connecting all the guild’s activities, events, rewards, and community systems. It empowers Arabic Web3 gamers and enthusiasts to interact seamlessly with the blockchain gaming world, NFTs, tokens, and governance systems in a transparent, secure, and user-friendly environment."
  },
  {
    "name": "React Native Passkeys",
    "description": "React Native Passkeys is a TypeScript library that provides a unified API for creating and authenticating with passkeys across Web, Android, and iOS.\n\nThe API mirrors the WebAuthn standard, making it easier for React Native developers to leverage existing documentation, tools, and backend infrastructure, abstracting away platform-specific complexities. \n\nWith over 250k downloads it is utilised by teams like Privy, Coinbase, Safe, ZeroDev, Ephemera, OneKey & more."
  },
  {
    "name": "Ethernaut CLI",
    "description": "A universal Ethereum swiss army knife with an AI duck taped onto it.\n\nA CLI for non-technical users, trying to bridge the gap between graphical UIs and CLIs.\n\nA framework for rapid tool building; integrate a new tool in a matter of hours.\n\nAn extensible framework composed of hardhat plugins."
  },
  {
    "name": "TPulseFi",
    "description": "I am the founder/CEO/Developer of TPulseFi, an application available on the Worldcoin App, and also the creator of the TPulseFi cryptocurrency on the Worldchain network, we are a verified project."
  },
  {
    "name": "Blobscan",
    "description": "**About Blobscan**\n\nBlobscan is the first open-source blockchain explorer designed to navigate and visualize shard blob transactions introduced in EIP-4844. It provides essential public infrastructure to help scale Ethereum, featuring:\n\n- 🔍 Advanced blob search and filtering\n- 🧠 Rich blob decoding (including Starknet and Optimism support)\n- 🗃 Multiple persistent blob storage integrations\n- 📊 A detailed analytics dashboard\n- 🔌 An API for querying blobs and metrics\n- 🐳 Docker and Kubernetes-ready deployment options\n\nOur mission is to make blob data accessible, transparent, and usable for the entire Ethereum ecosystem.\n\n**Who We Are**\n\nWe’re a small team of four developers (3 fullstack engineers and one DevOps specialist) fully committed to pushing Blobscan forward as a vital part of Ethereum’s scaling roadmap.\n\n**Recent Milestones & Updates**\n\nWe’ve shipped a number of important updates and new features, including:\n\n**🔧 Core Improvements**\n\n- Collaboration with ethPandaOps to prepare for the Dencun fork.\n- Collaboration with Load Network (prev. WeaveVM) as a new blob storage solution\n- Partnered with Ethereum Swarm, now sponsoring one year of blob storage\n- Expanded support for a total of 72 rollups.\n\n**🌐 Website Enhancements**\n\n- Introduced powerful search filters: by **slot, block, date range, and rollup**\n- Launched **rollup-level metrics** and statistics\n- Added **initial decoding support for Starknet and Optimism blobs**\n- Major improvements to the **mobile experience**\n- Numerous frontend performance and usability enhancements\n\n**🛠 DevOps & Developer Experience**\n\n- Re-architected the platform for better scalability and maintainability\n- Made Blobscan **Kubernetes-ready**\n- Improved Docker images — now **10x smaller and faster**\n- Published a **detailed deployment guide** using Kurtosis and Kubernetes\n- Revamped and expanded documentation\n\n**Funding & Outlook**\n\nBlobscan is currently supported by **Optimism RetroPGF**, and we’re incredibly grateful for this backing. We love working on Blobscan and have an exciting roadmap of improvements ahead — including deeper blob analytics, enhanced rollup-specific features, and broader ecosystem integrations.\n\nWe see Blobscan as a vital public good for Ethereum’s future and are committed to delivering the tools the ecosystem needs to thrive."
  },
  {
    "name": "ZNS",
    "description": "Decentralized naming solutions for the #Web3 🟢\nPersonalized for blockchain interactions with #AI\n\n255.000 domains on mainnet \n555.000 domains on testnet"
  },
  {
    "name": "Curvegrid MultiBaas",
    "description": "Curvegrid offers cutting-edge solutions for blockchain application development. Curvegrid's flagship product, MultiBaas, streamlines the DApp development process with a user-friendly web UI and a robust REST API. Supporting multiple EVM chains, MultiBaas accelerates time-to-market for sectors including finance, DeFi, gaming, art, and logistics."
  },
  {
    "name": "Daimo Pay",
    "description": "Daimo Pay lets users interact with your app using any token on any chain - no bridging, no swapping, no friction.\nIntegrate our SDK in 15 minutes to accept deposits or execute transactions in your app with any token, from any chain, using any wallet or exchange."
  },
  {
    "name": "WakeUp Labs | Rollup-as-a-Service for the OP Stack",
    "description": "We are WakeUp Labs, a software development company focused on building open-source infrastructure for the Ethereum ecosystem and the Superchain. Our team has been working closely with the OP Stack to deliver a fully open and modular Rollup-as-a-Service (RaaS) solution.\n\nOur RaaS tooling simplifies the deployment, management, and customization of rollups on Optimism. It includes a CLI, a web console, and deployment pipelines designed to empower developers and protocols to launch their own rollups quickly and securely—without needing to manage DevOps or low-level infra.\n\nWe believe the future of Ethereum scalability lies in modular rollups, and we're building the tools to make that future accessible to everyone. Our tools are already being used by projects and contributors in the Optimism ecosystem to explore new rollup use cases and accelerate Superchain adoption.\n\nWe’re committed to pushing forward the decentralization and usability of rollup infrastructure—aligned with Optimism’s values and mission."
  },
  {
    "name": "OpenOcean",
    "description": "OpenOcean is a leading DEX aggregator with best swap prices across 30+ chains."
  },
  {
    "name": "Tribo Vault",
    "description": "Tribo Vault is a mini app for the safe staking of our token CDT. The APY starts at 0.13% daily (~47.45% annual). Coins always remain in users' wallets. We sell CDT boxes and offer a 2x boost to multiply rewards — APY can reach up to 94.9%. Users can claim CDT rewards every 24 hours."
  },
  {
    "name": "Bloctopus",
    "description": "https://x.com/0xbloctopusBloctopus is building open-source dev tooling using Kurtosis that can spin up any web3 infrastructure on-demand. Through various kurtosis packages, we already support various blockchains, cross-chain protocols, oracles, wallet infra, and indexers. "
  },
  {
    "name": "vscode opstack debugger",
    "description": "A VS Code extension to scan Solidity contracts for errors and run Hardhat tests on Base Sepolia, simplifying smart contract development for Optimism's Superchain."
  },
  {
    "name": "Crypto Stock Exchange",
    "description": "A Decentralized Stock Exchange \n\nPlease see our presentation that accompanies this proposal: https://drive.google.com/file/d/1nyk1nORTpfhZbgY-WsTDVokwTWXdKpyY/view?usp=sharing\n\n\nWe will help people who have money on the blockchain and want to invest in stocks without having to convert it to fiat money or for those who live in countries where it is difficult to invest in stocks but is easier to buy crypto and those who like to use stock options."
  },
  {
    "name": "Black Scholes library/compiler - go and rust ",
    "description": "Derive's Black Scholes library/compiler into go and rust, research and testing in this area has led to 1 Black Scholes equation using ~300 gas while native EVM would be ~10K gas for a 30X more efficient computation of pricing and risk of any options related logic. Black Scholes precompile imported into client with `common.BytesToAddress([]byte{0x2,0x0}): &precompiles.Black76{},`. Go precompile is implemented and tested in PR#2. For more details on testing and gas cost determination, see PR#1.\n\nDerive is one of the first op-stack rollups delivering trustless, on-chain portfolio margin for options, spot and perpetual futures as well as structured products and fixed/floating rate lending markets. Derive has cleared over $15B in notional volume and has +$100M TVL"
  },
  {
    "name": "Jolt Finance",
    "description": "An aave fork launching on Optimism Mainnet"
  },
  {
    "name": "ERCx: Token Test Library",
    "description": "Runtime Verification is a leading formal verification company specializing in blockchain security and smart contract correctness. We've developed ERCx, the most comprehensive open-source testing library for ERC token standards, featuring over 500 individual tests across ERC-20, ERC-721, ERC-1155, and ERC-4626 implementations.\nERCx directly empowers Superchain builders by providing production-ready test suites that verify both standard compliance and security properties. Our library offers zero-configuration testing for deployed contracts via Foundry fork testing, plus simple integration for pre-deployment source code validation. With three testing tiers: Standard (EIP compliance), Security (vulnerability detection), and Features (implementation validation), developers can ship token contracts with confidence, knowing they've been thoroughly vetted against real-world attack vectors and edge cases.\nWhat makes ERCx particularly valuable for the Optimism ecosystem is its cross-chain compatibility and handling of complex deployment scenarios. The library seamlessly works across OP Stack chains and handles storage complexities that often challenge developers working with established tokens like USDC or stETH. By providing this critical testing infrastructure as open-source tooling, we're enabling safer, more reliable token implementations across the entire Superchain, directly supporting the ecosystem's growth while reducing the security risks that have historically plagued token contracts in DeFi."
  },
  {
    "name": "Derive Exchange SDK and Vault Executors",
    "description": "Derive's market making library provides a Client / SDK for Derive Exchange, types, automated trading algorithms, vault executors, and more. This Client SDK is open sourced and generalizable for use in market making and algo trading on hybrid orderbooks across the Superchain!\n\nDerive is one of the first op-stack rollups delivering trustless, on-chain portfolio margin for options, spot and perpetual futures as well as structured products and fixed/floating rate lending markets. Derive has cleared over $15B in notional volume and has +$100M TVL"
  },
  {
    "name": "NFTScan",
    "description": "NFTScan is a professional NFT Explorer tool that provides developers and users with NFT data search services for the Superchain ecosystem, including: OP Mainnet, Base, Mint blockchain and other blockchain networks."
  },
  {
    "name": "libethc",
    "description": "libethc is an open-source ethereum library for C/C++"
  },
  {
    "name": "Orki Finance",
    "description": "Permissionless credit and stablecoin protocol.\n\nBorrow against staked assets on your own terms."
  },
  {
    "name": "Enso Build",
    "description": "Enso is blockchain shortcuts. Your fastest way to build and launch onchain.\nBy mapping all onchain interactions to a shared engine, Enso lets you focus on your product."
  },
  {
    "name": "etherml",
    "description": "A command-line Ethereum wallet manager written in Go 1.24.3+ that generates secure private keys, derives addresses, and stores them in quantum-resistant encrypted files with a Terminal User Interface (TUI) for browsing and management."
  },
  {
    "name": "Superbeam",
    "description": "SuperBeam is an open-source typescript SDK on top of Superchain ecosystem. Superbeam is a single api you would ever need to transact across superchain. \n\nSuperBeam enables developers to interact with superchain interop enabled chains and protocols with less friction and without worrying about asset fragmentation across chains. It includes features like - Aggregated Balance, Asset Sweeping, Contract interactions and much more"
  },
  {
    "name": "Hydrex",
    "description": "Hydrex is an Omni-Liquidity ve(3,3) protocol built on Base for Base, designed to bring new users onchain."
  },
  {
    "name": "evm-mcp-server by mcpdotdirect",
    "description": "we built an evm mcp server that allows agents to interact with a multitude of chains"
  },
  {
    "name": "evmstate",
    "description": "A TypeScript library for tracing, and visualizing EVM state changes with detailed human-readable labeling."
  },
  {
    "name": "Multichaintools",
    "description": "Hi. I´m Ben and just interested in tech.... \nI was tired of all these gm chain sites that are charging money for a simple contract call, so I deployed my own contracts on multiple chains and are giving it out for free.\nBuild now also a Hyperlane msg with custom fees possible and lets see.... daily working on it."
  },
  {
    "name": "Metal Forge - Underground Metal Community Platform",
    "description": "\n## Project Overview\n\n\n**Metal Forge** is the world's first comprehensive blockchain-powered platform dedicated to the extreme metal music ecosystem. Built natively on Optimism Network, we're revolutionizing how underground metal artists monetize their music and connect with their global fanbase through Web3 technology.\n\n## What We Do\n\n### Core Platform Features\n\n**🎵 Demo Vault & Crypto Streaming**\n- Artists upload underground demos and earn instant ETH micropayments for each stream\n- Fans directly support musicians through seamless crypto transactions\n- 80% revenue share goes directly to artists, powered by Optimism's low-cost transactions\n\n**🤘 Legion Database**\n- The largest decentralized database of extreme metal bands worldwide\n- Complete band archives with lineups, discographies, and histories\n- Community-driven content with verification systems\n\n**🎨 NFT Forge**\n- Mint unique metal collectibles including band logos, album art, and exclusive memorabilia\n- Native Optimism smart contracts for gas-efficient minting and trading\n- Rare collectibles marketplace for physical and digital metal artifacts\n\n**👥 Underground Community**\n- Global network of metalheads with achievement badges and reputation systems\n- Social features connecting fans across geographical boundaries\n- Reward mechanisms for community participation and content creation\n\n## Technical Innovation\n\n### Blockchain Integration\n- **Native Optimism deployment** for fast, affordable transactions\n- **Web3 wallet integration** using Reown AppKit for seamless user experience\n- **Smart contract architecture** for automated royalty distribution\n- **IPFS storage** for decentralized music and metadata hosting\n\n### Technology Stack\n- **Next.js 15** with App Router for optimal performance\n- **TypeScript** for type-safe development\n- **Tailwind CSS** for responsive design\n- **Ethers.js** for blockchain interactions\n\n## Market Opportunity\n\nThe extreme metal music industry has been underserved by traditional streaming platforms that don't understand the underground culture. Metal Forge addresses this gap by:\n\n- **Direct artist monetization** without intermediaries\n- **Authentic community building** around extreme music genres\n- **Preservation of underground culture** through decentralized technology\n- **Global accessibility** for artists in regions with limited music industry infrastructure\n\n## Social Impact & Public Goods\n\n**Global Accessibility**\n- Enabling artists from developing countries to access global markets\n- No geographic restrictions or payment processor limitations\n- Supporting artists in regions with limited banking infrastructure\n\n**Cultural Preservation**\n- Digitally archiving underground metal history and rare recordings\n- Preserving cultural heritage of extreme music scenes worldwide\n- Open-source approach to metal music documentation\n\n**Economic Empowerment**\n- Direct peer-to-peer payments bypass traditional gatekeepers\n- Transparent, automated royalty distribution\n- Financial independence for independent artists\n\n## Why Optimism\n\n**Technical Benefits**\n- **Low transaction costs** enable micropayments for music streaming\n- **Fast confirmation times** provide smooth user experience\n- **Ethereum compatibility** allows integration with existing Web3 infrastructure\n- **Strong developer ecosystem** supports our technical requirements\n\n**Aligned Values**\n- Optimism's \"impact = profit\" philosophy matches our artist-first approach\n- Commitment to supporting public goods aligns with preserving underground culture\n- Decentralized governance model resonates with DIY metal ethos\n\n**Environmental Responsibility**\n- 99% lower carbon footprint compared to Ethereum mainnet\n- Sustainable blockchain infrastructure for eco-conscious metal community\n- Supporting Optimism's climate-positive initiatives\n\n**Ecosystem Benefits**\n- Contributing to Optimism's creator economy growth\n- Expanding Web3 adoption beyond DeFi into creative industries\n- Building bridges between traditional music industry and blockchain\n\n## Community Growth Strategy\n\n**Phase 1**: Launch with 50 selected underground bands from Norway, Sweden, Finland\n**Phase 2**: Expand to Eastern European scenes (Poland, Czech Republic, Romania)  \n**Phase 3**: Global expansion to South America, Asia, and emerging markets\n**Phase 4**: Integration with physical venues and record labels\n\n**Partnerships**: Collaboration with underground labels, metal festivals, and music collectives\n\n## Current Status\n\n**Development Phase**: Frontend architecture complete with 20+ pages and components\n\n**Features Implemented**: \n- Wallet connection and user authentication\n- Multi-step artist onboarding\n- Badge and achievement system\n- Responsive UI/UX design\n- Web3Modal integration\n\n**Next Milestones**:\n- Smart contract deployment on Optimism\n- Backend API development\n- IPFS integration for music storage\n- Beta testing with select metal artists\n\n## Success Metrics\n\n**Short-term (6 months)**:\n- 500+ active artists on platform\n- $50,000+ distributed to creators\n- 10,000+ registered users\n\n**Medium-term (12 months)**:\n- 2,000+ artists earning regular income\n- $500,000+ in creator payments\n- 50,000+ community members\n- 100+ NFT collections minted\n\n**Long-term Impact**:\n- Industry benchmark for fair creator compensation\n- Model replicated across other music genres\n- Sustainable income for 10,000+ artists globally\n\n## Grant Fund Allocation\n\n- **40%** - Smart contract development and auditing\n- **25%** - Backend infrastructure and IPFS integration  \n- **20%** - Marketing and artist acquisition\n- **10%** - Security audits and testing\n- **5%** - Community rewards and initial liquidity\n\n## Impact Goals\n\n- **Empower 10,000+ underground metal artists** with direct monetization tools\n- **Create sustainable income streams** for extreme music creators\n- **Preserve and promote** underground metal culture globally\n- **Demonstrate Web3 utility** in creative industries beyond mainstream adoption\n- **Contribute to Optimism ecosystem growth** through innovative creator economy solutions\n\nMetal Forge represents the convergence of authentic underground culture with cutting-edge blockchain technology, creating unprecedented opportunities for extreme metal artists to thrive in the digital economy while maintaining their artistic integrity and supporting the broader vision of decentralized, equitable creator economics on Optimism Network.\n"
  },
  {
    "name": "Summer.fi",
    "description": "The best place to Borrow and Earn in DeFi\nPower up your portfolio by Borrowing, Lending and Multiplying your favourite assets. Made Safe and Easy by industry leading automation tools."
  }
]